2025-05-12 13:44:18.149834: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2025-05-12 13:44:18.166701: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:467] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered
WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
E0000 00:00:1747050258.187415   21597 cuda_dnn.cc:8579] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered
E0000 00:00:1747050258.193784   21597 cuda_blas.cc:1407] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
W0000 00:00:1747050258.210533   21597 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
W0000 00:00:1747050258.210588   21597 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
W0000 00:00:1747050258.210592   21597 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
W0000 00:00:1747050258.210593   21597 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
2025-05-12 13:44:18.215996: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 AVX_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
Starting model training workflow...
Found 1 GPUs: [PhysicalDevice(name='/physical_device:GPU:0', device_type='GPU')]
GPU is available for training
Looking for population data files...
Loading data from full_population_data.csv
Loaded 126678 records.
Data contains 9 years: [np.int64(2016), np.int64(2017), np.int64(2018), np.int64(2019), np.int64(2020), np.int64(2021), np.int64(2022), np.int64(2023), np.int64(2024)]
Analyzing municipalities in the dataset...
Found 838 municipalities in the dataset.

Found 83 municipalities with data for all 9 years.

Selected municipalities for analysis:
                       name  records  grunnkretser  years   population
kommunenummer                                                         
1127              Randaberg       81             9      9  1245.419753
301                    Oslo     5253           615      9  1178.531389
1124                   Sola      234            26      9  1083.026667
1103              Stavanger     2107           247      9   600.026718
1532                  Giske      135            15      9   561.370370
1121                   Time      315            35      9   544.774603
1149                 Karmøy      711            79      9   536.957806
1516                Ulstein      153            17      9   515.758389
1122                Gjesdal      216            24      9   515.414286
1120                  Klepp      351            39      9   508.418338
1531                   Sula      171            19      9   490.631579
1130                 Strand      239            27      9   489.062762
1119                     Hå      378            42      9   456.457447
1528              Sykkylven      153            17      9   448.535948
1505           Kristiansund      513            57      9   425.097466
1144                Kvitsøy       63             7      9    75.238095
1838              Gildeskål      243            27      9    75.566524
1839                 Beiarn      117            13      9    78.880342
1816              Vevelstad       54             6      9    80.759259
1836                  Rødøy      126            14      9    92.495726
1811                 Bindal      135            15      9   100.289062
1853                 Evenes      117            13      9   106.956140
1848                Steigen      216            24      9   108.794393
1815                   Vega       99            11      9   111.193878
1826           Hattfjelldal      108            12      9   111.537037
1867                     Bø      207            23      9   116.268657
1874               Moskenes       81             9      9   119.447368
1827                  Dønna       99            11      9   126.303030
1859               Flakstad       90            10      9   127.000000
1573                  Smøla      144            16      9   134.846154
Saved information about selected municipalities to 'selected_municipalities.csv'

Filtered dataset contains 12909 records from 30 municipalities.
Preprocessing data...
Dropped 154 rows with missing values in essential columns.
/home/kristian/my_project/TFproject/data_pipeline.py:122: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['year'] = df['year'].astype(int)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
Creating all features...
/home/kristian/my_project/TFproject/features.py:12: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[numeric_cols] = df[numeric_cols].fillna(0)
Calculating age distribution ratios for 19 age groups...
/home/kristian/my_project/TFproject/features.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = np.where(df['totalBefolkning'] > 0,
/home/kristian/my_project/TFproject/features.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = df[f'{col}_ratio'].clip(0, 1)
/home/kristian/my_project/TFproject/features.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = np.where(df['totalBefolkning'] > 0,
/home/kristian/my_project/TFproject/features.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = df[f'{col}_ratio'].clip(0, 1)
/home/kristian/my_project/TFproject/features.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = np.where(df['totalBefolkning'] > 0,
/home/kristian/my_project/TFproject/features.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = df[f'{col}_ratio'].clip(0, 1)
/home/kristian/my_project/TFproject/features.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = np.where(df['totalBefolkning'] > 0,
/home/kristian/my_project/TFproject/features.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = df[f'{col}_ratio'].clip(0, 1)
/home/kristian/my_project/TFproject/features.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = np.where(df['totalBefolkning'] > 0,
/home/kristian/my_project/TFproject/features.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = df[f'{col}_ratio'].clip(0, 1)
/home/kristian/my_project/TFproject/features.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = np.where(df['totalBefolkning'] > 0,
/home/kristian/my_project/TFproject/features.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = df[f'{col}_ratio'].clip(0, 1)
/home/kristian/my_project/TFproject/features.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = np.where(df['totalBefolkning'] > 0,
/home/kristian/my_project/TFproject/features.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = df[f'{col}_ratio'].clip(0, 1)
/home/kristian/my_project/TFproject/features.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = np.where(df['totalBefolkning'] > 0,
/home/kristian/my_project/TFproject/features.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = df[f'{col}_ratio'].clip(0, 1)
/home/kristian/my_project/TFproject/features.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = np.where(df['totalBefolkning'] > 0,
/home/kristian/my_project/TFproject/features.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = df[f'{col}_ratio'].clip(0, 1)
/home/kristian/my_project/TFproject/features.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = np.where(df['totalBefolkning'] > 0,
/home/kristian/my_project/TFproject/features.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = df[f'{col}_ratio'].clip(0, 1)
/home/kristian/my_project/TFproject/features.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = np.where(df['totalBefolkning'] > 0,
/home/kristian/my_project/TFproject/features.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = df[f'{col}_ratio'].clip(0, 1)
/home/kristian/my_project/TFproject/features.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = np.where(df['totalBefolkning'] > 0,
/home/kristian/my_project/TFproject/features.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = df[f'{col}_ratio'].clip(0, 1)
/home/kristian/my_project/TFproject/features.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = np.where(df['totalBefolkning'] > 0,
/home/kristian/my_project/TFproject/features.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = df[f'{col}_ratio'].clip(0, 1)
/home/kristian/my_project/TFproject/features.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = np.where(df['totalBefolkning'] > 0,
/home/kristian/my_project/TFproject/features.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = df[f'{col}_ratio'].clip(0, 1)
/home/kristian/my_project/TFproject/features.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = np.where(df['totalBefolkning'] > 0,
/home/kristian/my_project/TFproject/features.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = df[f'{col}_ratio'].clip(0, 1)
/home/kristian/my_project/TFproject/features.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = np.where(df['totalBefolkning'] > 0,
/home/kristian/my_project/TFproject/features.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = df[f'{col}_ratio'].clip(0, 1)
/home/kristian/my_project/TFproject/features.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = np.where(df['totalBefolkning'] > 0,
/home/kristian/my_project/TFproject/features.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = df[f'{col}_ratio'].clip(0, 1)
/home/kristian/my_project/TFproject/features.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = np.where(df['totalBefolkning'] > 0,
/home/kristian/my_project/TFproject/features.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = df[f'{col}_ratio'].clip(0, 1)
/home/kristian/my_project/TFproject/features.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = np.where(df['totalBefolkning'] > 0,
/home/kristian/my_project/TFproject/features.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = df[f'{col}_ratio'].clip(0, 1)
/home/kristian/my_project/TFproject/features.py:28: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['children_0_14'] = df[children_cols].sum(axis=1)
/home/kristian/my_project/TFproject/features.py:29: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['children_ratio'] = (df['children_0_14'] / df['totalBefolkning'].replace(0, 1)).clip(0, 1)
/home/kristian/my_project/TFproject/features.py:33: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['elderly'] = df[elderly_cols].sum(axis=1)
/home/kristian/my_project/TFproject/features.py:34: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['elderly_ratio'] = (df['elderly'] / df['totalBefolkning'].replace(0, 1)).clip(0, 1)
/home/kristian/my_project/TFproject/features.py:38: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['working_age'] = df[working_age_cols].sum(axis=1)
/home/kristian/my_project/TFproject/features.py:39: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['working_age_ratio'] = (df['working_age'] / df['totalBefolkning'].replace(0, 1)).clip(0, 1)
/home/kristian/my_project/TFproject/features.py:43: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['gender_ratio'] = np.where(df['antallKvinner'] > 0,
/home/kristian/my_project/TFproject/features.py:47: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['gender_ratio'] = df['gender_ratio'].clip(0.5, 2)
Creating time-based features...
/home/kristian/my_project/TFproject/features.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['growth_rate'] = df.groupby(group_col)['totalBefolkning'].pct_change()
/home/kristian/my_project/TFproject/features.py:58: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['growth_rate'] = df['growth_rate'].clip(-1, 5).fillna(0)
/home/kristian/my_project/TFproject/features.py:61: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['pop_change'] = df.groupby(group_col)['totalBefolkning'].diff()
/home/kristian/my_project/TFproject/features.py:64: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['pop_change'] = df['pop_change'].clip(-max_change, max_change).fillna(0)
/home/kristian/my_project/TFproject/features.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_lag1'] = df.groupby(group_col)[col].shift(1)
/home/kristian/my_project/TFproject/features.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_lag1'] = df[f'{col}_lag1'].fillna(0)
/home/kristian/my_project/TFproject/features.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_lag1'] = df.groupby(group_col)[col].shift(1)
/home/kristian/my_project/TFproject/features.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_lag1'] = df[f'{col}_lag1'].fillna(0)
/home/kristian/my_project/TFproject/features.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_lag1'] = df.groupby(group_col)[col].shift(1)
/home/kristian/my_project/TFproject/features.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_lag1'] = df[f'{col}_lag1'].fillna(0)
/home/kristian/my_project/TFproject/features.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_lag1'] = df.groupby(group_col)[col].shift(1)
/home/kristian/my_project/TFproject/features.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_lag1'] = df[f'{col}_lag1'].fillna(0)
Feature engineering complete
Finding grunnkretser with at least two consecutive years of data...
Found 1479 grunnkretser with consecutive years of data
Final count: 1479 grunnkretser
Creating input-target pairs with target column: folketilvekst
Using folketilvekst as target variable
Using 57 features
Sample features: ['statistikkÅr', 'totalBefolkning', 'antallMenn', 'antallKvinner', 'befolkning0Til04År', 'befolkning05Til09År', 'befolkning10Til14År', 'befolkning15Til19År', 'befolkning20Til24År', 'befolkning25Til29År']...
Creating input-target pairs from 12755 filtered records...
Created 11237 input-target pairs from 1479 grunnkretser
X shape: (11237, 57), y shape: (11237,)
Saved feature list to model_features.csv
Splitting data into train, validation, and test sets...
Train: 1035 grunnkretser
Validation: 222 grunnkretser
Test: 222 grunnkretser
Training set: (7834, 57)
Validation set: (1705, 57)
Testing set: (1698, 57)
Scaling the data...
Training model...
Building model with input shape (57,)
/home/kristian/my_project/venv/lib/python3.12/site-packages/keras/src/layers/core/input_layer.py:27: UserWarning: Argument `input_shape` is deprecated. Use `shape` instead.
  warnings.warn(
I0000 00:00:1747050269.547211   21597 gpu_device.cc:2019] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 5564 MB memory:  -> device: 0, name: NVIDIA GeForce RTX 3070 Ti Laptop GPU, pci bus id: 0000:01:00.0, compute capability: 8.6
Model: "sequential"
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓
┃ Layer (type)                    ┃ Output Shape           ┃       Param # ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩
│ dense (Dense)                   │ (None, 128)            │         7,424 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ batch_normalization             │ (None, 128)            │           512 │
│ (BatchNormalization)            │                        │               │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dropout (Dropout)               │ (None, 128)            │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense_1 (Dense)                 │ (None, 64)             │         8,256 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ batch_normalization_1           │ (None, 64)             │           256 │
│ (BatchNormalization)            │                        │               │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dropout_1 (Dropout)             │ (None, 64)             │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense_2 (Dense)                 │ (None, 32)             │         2,080 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ batch_normalization_2           │ (None, 32)             │           128 │
│ (BatchNormalization)            │                        │               │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dropout_2 (Dropout)             │ (None, 32)             │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense_3 (Dense)                 │ (None, 1)              │            33 │
└─────────────────────────────────┴────────────────────────┴───────────────┘
 Total params: 18,689 (73.00 KB)
 Trainable params: 18,241 (71.25 KB)
 Non-trainable params: 448 (1.75 KB)
Training model for up to 150 epochs with batch size 64...
Epoch 1/150
WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
I0000 00:00:1747050272.193337   21801 service.cc:152] XLA service 0x7f4994006890 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:
I0000 00:00:1747050272.193373   21801 service.cc:160]   StreamExecutor device (0): NVIDIA GeForce RTX 3070 Ti Laptop GPU, Compute Capability 8.6
2025-05-12 13:44:32.242180: I tensorflow/compiler/mlir/tensorflow/utils/dump_mlir_util.cc:269] disabling MLIR crash reproducer, set env var `MLIR_CRASH_REPRODUCER_DIRECTORY` to enable.
I0000 00:00:1747050272.515637   21801 cuda_dnn.cc:529] Loaded cuDNN version 90300
I0000 00:00:1747050274.483187   21801 device_compiler.h:188] Compiled cluster using XLA!  This line is logged at most once for the lifetime of the process.
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m8:07[0m 4s/step - loss: 8.5617 - mean_absolute_error: 1.6378[1m 18/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 25.8928 - mean_absolute_error: 1.9277[1m 37/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 24.0238 - mean_absolute_error: 1.8682[1m 57/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 22.5801 - mean_absolute_error: 1.8141[1m 72/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 22.3266 - mean_absolute_error: 1.7901[1m 91/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 3ms/step - loss: 22.2720 - mean_absolute_error: 1.7685[1m110/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 3ms/step - loss: 22.2161 - mean_absolute_error: 1.7522[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 20ms/step - loss: 22.0539 - mean_absolute_error: 1.7405
Epoch 1: val_loss improved from inf to 6.52871, saving model to population_growth_model_enhanced.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m7s[0m 27ms/step - loss: 22.0387 - mean_absolute_error: 1.7397 - val_loss: 6.5287 - val_mean_absolute_error: 0.8539 - learning_rate: 0.0010
Epoch 2/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 28ms/step - loss: 2.0043 - mean_absolute_error: 0.9659[1m 14/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 12.9622 - mean_absolute_error: 1.4272[1m 27/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 13.8057 - mean_absolute_error: 1.4648[1m 39/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 13.5754 - mean_absolute_error: 1.4653[1m 52/123[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 13.3679 - mean_absolute_error: 1.4612[1m 66/123[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 13.6609 - mean_absolute_error: 1.4637[1m 82/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 14.3798 - mean_absolute_error: 1.4711[1m 98/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 4ms/step - loss: 14.9987 - mean_absolute_error: 1.4787[1m114/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 15.3807 - mean_absolute_error: 1.4851
Epoch 2: val_loss improved from 6.52871 to 6.41475, saving model to population_growth_model_enhanced.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 15.5061 - mean_absolute_error: 1.4871 - val_loss: 6.4147 - val_mean_absolute_error: 0.8698 - learning_rate: 0.0010
Epoch 3/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 26ms/step - loss: 2.7868 - mean_absolute_error: 1.1555[1m 16/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 13.7252 - mean_absolute_error: 1.4505[1m 31/123[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 13.7200 - mean_absolute_error: 1.4489[1m 46/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 13.4293 - mean_absolute_error: 1.4399[1m 62/123[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 13.3803 - mean_absolute_error: 1.4346[1m 77/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 13.8874 - mean_absolute_error: 1.4381[1m 91/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 14.2754 - mean_absolute_error: 1.4416[1m104/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 14.5831 - mean_absolute_error: 1.4461[1m118/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 14.7613 - mean_absolute_error: 1.4494
Epoch 3: val_loss did not improve from 6.41475
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 14.7988 - mean_absolute_error: 1.4501 - val_loss: 6.4319 - val_mean_absolute_error: 0.9182 - learning_rate: 0.0010
Epoch 4/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 24ms/step - loss: 2.1401 - mean_absolute_error: 0.9956[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 12.0504 - mean_absolute_error: 1.3800[1m 31/123[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 12.3426 - mean_absolute_error: 1.4118[1m 46/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 12.1646 - mean_absolute_error: 1.4110[1m 62/123[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 12.2022 - mean_absolute_error: 1.4066[1m 77/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 12.7940 - mean_absolute_error: 1.4122[1m 92/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 13.3011 - mean_absolute_error: 1.4198[1m107/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 4ms/step - loss: 13.7220 - mean_absolute_error: 1.4290[1m121/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 13.9394 - mean_absolute_error: 1.4344
Epoch 4: val_loss improved from 6.41475 to 6.26978, saving model to population_growth_model_enhanced.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 13.9675 - mean_absolute_error: 1.4352 - val_loss: 6.2698 - val_mean_absolute_error: 0.9073 - learning_rate: 0.0010
Epoch 5/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 24ms/step - loss: 3.3437 - mean_absolute_error: 1.1252[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 12.8226 - mean_absolute_error: 1.4253[1m 30/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 13.1945 - mean_absolute_error: 1.4495[1m 44/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 12.7891 - mean_absolute_error: 1.4370[1m 57/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 12.5851 - mean_absolute_error: 1.4283[1m 70/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 12.8083 - mean_absolute_error: 1.4274[1m 85/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 13.2066 - mean_absolute_error: 1.4323[1m 99/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 13.5542 - mean_absolute_error: 1.4384[1m111/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 13.7477 - mean_absolute_error: 1.4429[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 4ms/step - loss: 13.8661 - mean_absolute_error: 1.4451
Epoch 5: val_loss improved from 6.26978 to 6.16921, saving model to population_growth_model_enhanced.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 13.8718 - mean_absolute_error: 1.4452 - val_loss: 6.1692 - val_mean_absolute_error: 0.8990 - learning_rate: 0.0010
Epoch 6/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 25ms/step - loss: 2.2110 - mean_absolute_error: 0.9639[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.5467 - mean_absolute_error: 1.3516[1m 30/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.8401 - mean_absolute_error: 1.3827[1m 43/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.7540 - mean_absolute_error: 1.3877[1m 57/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.7142 - mean_absolute_error: 1.3858[1m 69/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 12.0065 - mean_absolute_error: 1.3886[1m 81/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 12.4169 - mean_absolute_error: 1.3945[1m 93/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 4ms/step - loss: 12.7944 - mean_absolute_error: 1.4019[1m108/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 4ms/step - loss: 13.1373 - mean_absolute_error: 1.4105[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 4ms/step - loss: 13.3139 - mean_absolute_error: 1.4154
Epoch 6: val_loss improved from 6.16921 to 6.07943, saving model to population_growth_model_enhanced.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 13.3209 - mean_absolute_error: 1.4157 - val_loss: 6.0794 - val_mean_absolute_error: 0.8927 - learning_rate: 0.0010
Epoch 7/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 24ms/step - loss: 1.9140 - mean_absolute_error: 0.9972[1m 14/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 10.9571 - mean_absolute_error: 1.3164[1m 27/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.7568 - mean_absolute_error: 1.3679[1m 40/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.5301 - mean_absolute_error: 1.3751[1m 54/123[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.3794 - mean_absolute_error: 1.3752[1m 69/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.6250 - mean_absolute_error: 1.3788[1m 84/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 12.0104 - mean_absolute_error: 1.3858[1m 98/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 4ms/step - loss: 12.3345 - mean_absolute_error: 1.3921[1m113/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 12.5579 - mean_absolute_error: 1.3977
Epoch 7: val_loss improved from 6.07943 to 5.94416, saving model to population_growth_model_enhanced.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 12.6503 - mean_absolute_error: 1.3996 - val_loss: 5.9442 - val_mean_absolute_error: 0.8797 - learning_rate: 0.0010
Epoch 8/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 26ms/step - loss: 2.1136 - mean_absolute_error: 1.0097[1m 14/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 10.7064 - mean_absolute_error: 1.3378[1m 27/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.3957 - mean_absolute_error: 1.3808[1m 41/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.1869 - mean_absolute_error: 1.3780[1m 54/123[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.0427 - mean_absolute_error: 1.3718[1m 68/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.3080 - mean_absolute_error: 1.3740[1m 82/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.7624 - mean_absolute_error: 1.3823[1m 97/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 4ms/step - loss: 12.1710 - mean_absolute_error: 1.3925[1m111/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 12.4120 - mean_absolute_error: 1.4000
Epoch 8: val_loss improved from 5.94416 to 5.87008, saving model to population_growth_model_enhanced.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 12.5354 - mean_absolute_error: 1.4039 - val_loss: 5.8701 - val_mean_absolute_error: 0.8882 - learning_rate: 0.0010
Epoch 9/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 26ms/step - loss: 1.5440 - mean_absolute_error: 0.8507[1m 14/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 10.3996 - mean_absolute_error: 1.3010[1m 28/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 10.8850 - mean_absolute_error: 1.3476[1m 42/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 10.6657 - mean_absolute_error: 1.3560[1m 55/123[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 10.5530 - mean_absolute_error: 1.3574[1m 69/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 10.8090 - mean_absolute_error: 1.3629[1m 83/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.1566 - mean_absolute_error: 1.3701[1m 96/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 4ms/step - loss: 11.4869 - mean_absolute_error: 1.3781[1m109/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 4ms/step - loss: 11.7191 - mean_absolute_error: 1.3850
Epoch 9: val_loss did not improve from 5.87008
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 11.8649 - mean_absolute_error: 1.3892 - val_loss: 5.9975 - val_mean_absolute_error: 0.8767 - learning_rate: 0.0010
Epoch 10/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 26ms/step - loss: 2.5666 - mean_absolute_error: 1.1039[1m 14/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 10.0516 - mean_absolute_error: 1.3791[1m 28/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 10.4086 - mean_absolute_error: 1.3789[1m 42/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 10.3711 - mean_absolute_error: 1.3726[1m 56/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 10.3774 - mean_absolute_error: 1.3686[1m 69/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 10.6436 - mean_absolute_error: 1.3685[1m 82/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.0531 - mean_absolute_error: 1.3737[1m 95/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 4ms/step - loss: 11.3842 - mean_absolute_error: 1.3790[1m108/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 4ms/step - loss: 11.6268 - mean_absolute_error: 1.3841[1m122/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 11.7899 - mean_absolute_error: 1.3868
Epoch 10: val_loss did not improve from 5.87008
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 11.8038 - mean_absolute_error: 1.3870 - val_loss: 5.9027 - val_mean_absolute_error: 0.8977 - learning_rate: 0.0010
Epoch 11/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 24ms/step - loss: 2.3001 - mean_absolute_error: 1.0484[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.2123 - mean_absolute_error: 1.3553[1m 30/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.6206 - mean_absolute_error: 1.3928[1m 44/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.3708 - mean_absolute_error: 1.3944[1m 60/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.1835 - mean_absolute_error: 1.3898[1m 74/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.4016 - mean_absolute_error: 1.3905[1m 89/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.6430 - mean_absolute_error: 1.3938[1m104/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 11.8790 - mean_absolute_error: 1.3982[1m118/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 11.9887 - mean_absolute_error: 1.4006
Epoch 11: val_loss improved from 5.87008 to 5.74526, saving model to population_growth_model_enhanced.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 12.0094 - mean_absolute_error: 1.4009 - val_loss: 5.7453 - val_mean_absolute_error: 0.8771 - learning_rate: 0.0010
Epoch 12/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 26ms/step - loss: 3.8540 - mean_absolute_error: 1.1371[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 10.3030 - mean_absolute_error: 1.3497[1m 29/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 10.5782 - mean_absolute_error: 1.3685[1m 42/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 10.4149 - mean_absolute_error: 1.3674[1m 56/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 10.2713 - mean_absolute_error: 1.3625[1m 70/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 10.4874 - mean_absolute_error: 1.3629[1m 86/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 10.7968 - mean_absolute_error: 1.3652[1m101/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 11.0734 - mean_absolute_error: 1.3689[1m117/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 11.2597 - mean_absolute_error: 1.3722
Epoch 12: val_loss did not improve from 5.74526
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 11.3075 - mean_absolute_error: 1.3730 - val_loss: 5.8532 - val_mean_absolute_error: 0.8892 - learning_rate: 0.0010
Epoch 13/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 31ms/step - loss: 2.4069 - mean_absolute_error: 0.9899[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 10.2627 - mean_absolute_error: 1.3206[1m 30/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 10.8811 - mean_absolute_error: 1.3574[1m 44/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 10.6931 - mean_absolute_error: 1.3605[1m 60/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 10.5448 - mean_absolute_error: 1.3590[1m 74/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 10.8021 - mean_absolute_error: 1.3636[1m 88/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.0730 - mean_absolute_error: 1.3709[1m101/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 11.3199 - mean_absolute_error: 1.3778[1m114/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 11.4657 - mean_absolute_error: 1.3823
Epoch 13: val_loss improved from 5.74526 to 5.63251, saving model to population_growth_model_enhanced.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 11.5187 - mean_absolute_error: 1.3837 - val_loss: 5.6325 - val_mean_absolute_error: 0.8824 - learning_rate: 0.0010
Epoch 14/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 24ms/step - loss: 2.7408 - mean_absolute_error: 1.0791[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.4557 - mean_absolute_error: 1.3084 [1m 29/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.8081 - mean_absolute_error: 1.3429[1m 43/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.8905 - mean_absolute_error: 1.3535[1m 57/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.8613 - mean_absolute_error: 1.3555[1m 71/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 10.0994 - mean_absolute_error: 1.3586[1m 85/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 10.3868 - mean_absolute_error: 1.3625[1m101/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 10.6706 - mean_absolute_error: 1.3666[1m116/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 10.8425 - mean_absolute_error: 1.3699
Epoch 14: val_loss improved from 5.63251 to 5.50588, saving model to population_growth_model_enhanced.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 10.8914 - mean_absolute_error: 1.3704 - val_loss: 5.5059 - val_mean_absolute_error: 0.8734 - learning_rate: 0.0010
Epoch 15/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 28ms/step - loss: 2.6127 - mean_absolute_error: 1.0850[1m 16/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.6003 - mean_absolute_error: 1.3572 [1m 30/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.9855 - mean_absolute_error: 1.3751[1m 44/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.0296 - mean_absolute_error: 1.3746[1m 59/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.1032 - mean_absolute_error: 1.3688[1m 74/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.4852 - mean_absolute_error: 1.3692[1m 89/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.8091 - mean_absolute_error: 1.3719[1m103/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 10.0677 - mean_absolute_error: 1.3753[1m117/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 10.2308 - mean_absolute_error: 1.3775
Epoch 15: val_loss did not improve from 5.50588
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 10.2758 - mean_absolute_error: 1.3778 - val_loss: 5.8260 - val_mean_absolute_error: 0.8573 - learning_rate: 0.0010
Epoch 16/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 28ms/step - loss: 2.3964 - mean_absolute_error: 1.1338[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 10.4310 - mean_absolute_error: 1.4091[1m 31/123[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 10.2670 - mean_absolute_error: 1.4193[1m 45/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.9637 - mean_absolute_error: 1.4112 [1m 58/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.7979 - mean_absolute_error: 1.4034[1m 72/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.9266 - mean_absolute_error: 1.4018[1m 87/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 10.1147 - mean_absolute_error: 1.4015[1m103/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 10.3002 - mean_absolute_error: 1.4021[1m119/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 10.3917 - mean_absolute_error: 1.4018
Epoch 16: val_loss did not improve from 5.50588
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 10.4010 - mean_absolute_error: 1.4011 - val_loss: 5.5244 - val_mean_absolute_error: 0.8693 - learning_rate: 0.0010
Epoch 17/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 25ms/step - loss: 3.1143 - mean_absolute_error: 1.1660[1m 14/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.0303 - mean_absolute_error: 1.3690 [1m 28/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.5969 - mean_absolute_error: 1.3826[1m 39/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.4449 - mean_absolute_error: 1.3812[1m 53/123[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.2358 - mean_absolute_error: 1.3722[1m 65/123[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.3044 - mean_absolute_error: 1.3681[1m 79/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.5486 - mean_absolute_error: 1.3683[1m 95/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 4ms/step - loss: 9.7692 - mean_absolute_error: 1.3706[1m110/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 4ms/step - loss: 9.9140 - mean_absolute_error: 1.3733
Epoch 17: val_loss improved from 5.50588 to 5.49311, saving model to population_growth_model_enhanced.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 9.9906 - mean_absolute_error: 1.3742 - val_loss: 5.4931 - val_mean_absolute_error: 0.8689 - learning_rate: 0.0010
Epoch 18/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 26ms/step - loss: 2.6339 - mean_absolute_error: 1.2296[1m 14/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.3635 - mean_absolute_error: 1.3740 [1m 26/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.7593 - mean_absolute_error: 1.3878[1m 38/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.5641 - mean_absolute_error: 1.3824[1m 51/123[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.3913 - mean_absolute_error: 1.3731[1m 67/123[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.5494 - mean_absolute_error: 1.3699[1m 82/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.8287 - mean_absolute_error: 1.3724[1m 97/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 4ms/step - loss: 9.0659 - mean_absolute_error: 1.3752[1m112/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 9.2303 - mean_absolute_error: 1.3777
Epoch 18: val_loss improved from 5.49311 to 5.34466, saving model to population_growth_model_enhanced.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 9.3060 - mean_absolute_error: 1.3777 - val_loss: 5.3447 - val_mean_absolute_error: 0.8481 - learning_rate: 0.0010
Epoch 19/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 26ms/step - loss: 3.8636 - mean_absolute_error: 1.2643[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.8231 - mean_absolute_error: 1.4269 [1m 30/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.0636 - mean_absolute_error: 1.4352[1m 45/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.8782 - mean_absolute_error: 1.4176[1m 61/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.8395 - mean_absolute_error: 1.4029[1m 75/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.0897 - mean_absolute_error: 1.4003[1m 89/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.3027 - mean_absolute_error: 1.3995[1m103/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 9.5185 - mean_absolute_error: 1.4000[1m117/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 9.6452 - mean_absolute_error: 1.4006
Epoch 19: val_loss did not improve from 5.34466
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 9.6784 - mean_absolute_error: 1.4000 - val_loss: 5.9000 - val_mean_absolute_error: 0.8600 - learning_rate: 0.0010
Epoch 20/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 29ms/step - loss: 2.3993 - mean_absolute_error: 1.2136[1m 14/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.3083 - mean_absolute_error: 1.4609 [1m 29/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.4644 - mean_absolute_error: 1.4552[1m 43/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.3721 - mean_absolute_error: 1.4472[1m 58/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.2605 - mean_absolute_error: 1.4344[1m 72/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.4089 - mean_absolute_error: 1.4293[1m 87/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.5740 - mean_absolute_error: 1.4261[1m101/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 9.7015 - mean_absolute_error: 1.4237[1m114/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 9.7942 - mean_absolute_error: 1.4226
Epoch 20: val_loss did not improve from 5.34466
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 9.8258 - mean_absolute_error: 1.4206 - val_loss: 5.8406 - val_mean_absolute_error: 0.8895 - learning_rate: 0.0010
Epoch 21/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 25ms/step - loss: 2.3272 - mean_absolute_error: 1.0778[1m 14/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.1899 - mean_absolute_error: 1.3680 [1m 29/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.4866 - mean_absolute_error: 1.3727[1m 42/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.4267 - mean_absolute_error: 1.3703[1m 56/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.3727 - mean_absolute_error: 1.3660[1m 72/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.5488 - mean_absolute_error: 1.3659[1m 87/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.7371 - mean_absolute_error: 1.3666[1m102/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 8.9044 - mean_absolute_error: 1.3685[1m115/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 9.0141 - mean_absolute_error: 1.3710
Epoch 21: val_loss did not improve from 5.34466
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 9.0601 - mean_absolute_error: 1.3715 - val_loss: 5.9695 - val_mean_absolute_error: 0.8489 - learning_rate: 0.0010
Epoch 22/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 25ms/step - loss: 3.7176 - mean_absolute_error: 1.3262[1m 10/123[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 6ms/step - loss: 7.7989 - mean_absolute_error: 1.4345 [1m 24/123[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m0s[0m 5ms/step - loss: 8.3345 - mean_absolute_error: 1.4372[1m 38/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.1139 - mean_absolute_error: 1.4157[1m 54/123[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.9518 - mean_absolute_error: 1.3976[1m 67/123[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.0913 - mean_absolute_error: 1.3917[1m 81/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.3224 - mean_absolute_error: 1.3912[1m 97/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 4ms/step - loss: 8.5192 - mean_absolute_error: 1.3915[1m113/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 8.6820 - mean_absolute_error: 1.3930
Epoch 22: val_loss did not improve from 5.34466
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 8.7781 - mean_absolute_error: 1.3932 - val_loss: 5.9932 - val_mean_absolute_error: 0.8358 - learning_rate: 0.0010
Epoch 23/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 25ms/step - loss: 4.0470 - mean_absolute_error: 1.3248[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.4100 - mean_absolute_error: 1.4674 [1m 29/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.5110 - mean_absolute_error: 1.4569[1m 43/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.1875 - mean_absolute_error: 1.4389[1m 57/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.9793 - mean_absolute_error: 1.4223[1m 71/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.0529 - mean_absolute_error: 1.4148[1m 87/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.2898 - mean_absolute_error: 1.4137[1m103/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 9.5076 - mean_absolute_error: 1.4157[1m119/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 3ms/step - loss: 9.6128 - mean_absolute_error: 1.4164
Epoch 23: val_loss improved from 5.34466 to 5.27898, saving model to population_growth_model_enhanced.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 9.6243 - mean_absolute_error: 1.4162 - val_loss: 5.2790 - val_mean_absolute_error: 0.8526 - learning_rate: 0.0010
Epoch 24/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 26ms/step - loss: 3.8375 - mean_absolute_error: 1.2003[1m 14/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.4787 - mean_absolute_error: 1.3534 [1m 27/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.9869 - mean_absolute_error: 1.3676[1m 40/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.1266 - mean_absolute_error: 1.3647[1m 54/123[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.1817 - mean_absolute_error: 1.3575[1m 67/123[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.4096 - mean_absolute_error: 1.3572[1m 83/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.7004 - mean_absolute_error: 1.3608[1m 95/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 4ms/step - loss: 7.9207 - mean_absolute_error: 1.3646[1m108/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 4ms/step - loss: 8.1016 - mean_absolute_error: 1.3689[1m122/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 8.2115 - mean_absolute_error: 1.3714
Epoch 24: val_loss did not improve from 5.27898
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 8.2208 - mean_absolute_error: 1.3716 - val_loss: 5.5006 - val_mean_absolute_error: 0.8560 - learning_rate: 0.0010
Epoch 25/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 25ms/step - loss: 2.5685 - mean_absolute_error: 1.1496[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.6557 - mean_absolute_error: 1.3778 [1m 29/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.8651 - mean_absolute_error: 1.3764[1m 44/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.7495 - mean_absolute_error: 1.3662[1m 58/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.7574 - mean_absolute_error: 1.3580[1m 73/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.9769 - mean_absolute_error: 1.3568[1m 88/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.1413 - mean_absolute_error: 1.3573[1m104/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 8.2921 - mean_absolute_error: 1.3600[1m120/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 3ms/step - loss: 8.3757 - mean_absolute_error: 1.3615
Epoch 25: val_loss did not improve from 5.27898
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 8.3837 - mean_absolute_error: 1.3614 - val_loss: 5.7851 - val_mean_absolute_error: 0.8305 - learning_rate: 0.0010
Epoch 26/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 26ms/step - loss: 4.5800 - mean_absolute_error: 1.2680[1m 16/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 7.4396 - mean_absolute_error: 1.3418 [1m 30/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.5340 - mean_absolute_error: 1.3468[1m 45/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.4824 - mean_absolute_error: 1.3432[1m 61/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 7.5083 - mean_absolute_error: 1.3390[1m 78/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 7.7876 - mean_absolute_error: 1.3407[1m 94/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 3ms/step - loss: 8.0500 - mean_absolute_error: 1.3428[1m111/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 3ms/step - loss: 8.3312 - mean_absolute_error: 1.3477
Epoch 26: val_loss did not improve from 5.27898
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 4ms/step - loss: 8.4666 - mean_absolute_error: 1.3503 - val_loss: 5.8115 - val_mean_absolute_error: 0.8393 - learning_rate: 0.0010
Epoch 27/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 27ms/step - loss: 2.6207 - mean_absolute_error: 1.1085[1m 14/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.3465 - mean_absolute_error: 1.3546 [1m 28/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.3455 - mean_absolute_error: 1.3482[1m 42/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.1356 - mean_absolute_error: 1.3392[1m 58/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.1023 - mean_absolute_error: 1.3347[1m 73/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.3762 - mean_absolute_error: 1.3405[1m 88/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.5998 - mean_absolute_error: 1.3454[1m104/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 7.7792 - mean_absolute_error: 1.3508[1m120/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 7.9047 - mean_absolute_error: 1.3551
Epoch 27: val_loss did not improve from 5.27898
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 7.9226 - mean_absolute_error: 1.3556 - val_loss: 5.6806 - val_mean_absolute_error: 0.8287 - learning_rate: 0.0010
Epoch 28/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 27ms/step - loss: 2.7494 - mean_absolute_error: 1.1639[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.5018 - mean_absolute_error: 1.3680 [1m 31/123[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.8921 - mean_absolute_error: 1.3829[1m 45/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.0305 - mean_absolute_error: 1.3859[1m 61/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.1857 - mean_absolute_error: 1.3830[1m 73/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.3522 - mean_absolute_error: 1.3826[1m 84/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.4838 - mean_absolute_error: 1.3823[1m 97/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 4ms/step - loss: 7.6499 - mean_absolute_error: 1.3823[1m111/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 7.7781 - mean_absolute_error: 1.3831
Epoch 28: val_loss did not improve from 5.27898
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 7.8465 - mean_absolute_error: 1.3823 - val_loss: 5.7144 - val_mean_absolute_error: 0.8251 - learning_rate: 0.0010
Epoch 29/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m7s[0m 60ms/step - loss: 2.3841 - mean_absolute_error: 1.0713[1m 16/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.8647 - mean_absolute_error: 1.3826 [1m 32/123[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 7.8943 - mean_absolute_error: 1.3886[1m 47/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 7.6548 - mean_absolute_error: 1.3788[1m 61/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 7.5739 - mean_absolute_error: 1.3706[1m 77/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 7.7196 - mean_absolute_error: 1.3704[1m 91/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 3ms/step - loss: 7.8197 - mean_absolute_error: 1.3698[1m108/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 3ms/step - loss: 7.9323 - mean_absolute_error: 1.3717[1m122/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 3ms/step - loss: 7.9891 - mean_absolute_error: 1.3730
Epoch 29: val_loss did not improve from 5.27898
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m-2s[0m -15758us/step - loss: 7.9935 - mean_absolute_error: 1.3731 - val_loss: 5.9157 - val_mean_absolute_error: 0.8187 - learning_rate: 0.0010
Epoch 30/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 26ms/step - loss: 4.4966 - mean_absolute_error: 1.3616[1m 16/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.5374 - mean_absolute_error: 1.4218 [1m 31/123[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.5615 - mean_absolute_error: 1.4148[1m 46/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.3676 - mean_absolute_error: 1.3997[1m 61/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.3679 - mean_absolute_error: 1.3904[1m 76/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.5623 - mean_absolute_error: 1.3884[1m 92/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.7187 - mean_absolute_error: 1.3886[1m107/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 4ms/step - loss: 7.8474 - mean_absolute_error: 1.3910[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 4ms/step - loss: 7.9771 - mean_absolute_error: 1.3926
Epoch 30: val_loss did not improve from 5.27898
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 7.9832 - mean_absolute_error: 1.3927 - val_loss: 6.0167 - val_mean_absolute_error: 0.8441 - learning_rate: 0.0010
Epoch 31/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 24ms/step - loss: 3.5985 - mean_absolute_error: 1.2260[1m 16/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.8644 - mean_absolute_error: 1.4032 [1m 32/123[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 6.8996 - mean_absolute_error: 1.3968[1m 47/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.7364 - mean_absolute_error: 1.3811[1m 60/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.7516 - mean_absolute_error: 1.3713[1m 73/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.9393 - mean_absolute_error: 1.3682[1m 87/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.1340 - mean_absolute_error: 1.3686[1m103/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 7.3173 - mean_absolute_error: 1.3715[1m118/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 7.4611 - mean_absolute_error: 1.3745
Epoch 31: val_loss did not improve from 5.27898

Epoch 31: ReduceLROnPlateau reducing learning rate to 0.0007000000332482159.
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 7.4952 - mean_absolute_error: 1.3749 - val_loss: 5.7299 - val_mean_absolute_error: 0.8331 - learning_rate: 0.0010
Epoch 32/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 32ms/step - loss: 2.4566 - mean_absolute_error: 1.1883[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.3019 - mean_absolute_error: 1.3882 [1m 31/123[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 6.5566 - mean_absolute_error: 1.3789[1m 44/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.4505 - mean_absolute_error: 1.3640[1m 56/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.4384 - mean_absolute_error: 1.3543[1m 69/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.6063 - mean_absolute_error: 1.3527[1m 82/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.7925 - mean_absolute_error: 1.3554[1m 96/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 4ms/step - loss: 6.9552 - mean_absolute_error: 1.3571[1m111/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 7.0675 - mean_absolute_error: 1.3593
Epoch 32: val_loss did not improve from 5.27898
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 7.1325 - mean_absolute_error: 1.3603 - val_loss: 5.4019 - val_mean_absolute_error: 0.8276 - learning_rate: 7.0000e-04
Epoch 33/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 28ms/step - loss: 5.2626 - mean_absolute_error: 1.4089[1m 16/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.5814 - mean_absolute_error: 1.4762 [1m 32/123[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 7.4875 - mean_absolute_error: 1.4525[1m 47/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.2102 - mean_absolute_error: 1.4312[1m 63/123[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 7.1983 - mean_absolute_error: 1.4177[1m 78/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 7.3861 - mean_absolute_error: 1.4142[1m 92/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 3ms/step - loss: 7.5213 - mean_absolute_error: 1.4112[1m108/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 3ms/step - loss: 7.6217 - mean_absolute_error: 1.4096[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 3ms/step - loss: 7.6669 - mean_absolute_error: 1.4078
Epoch 33: val_loss did not improve from 5.27898
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 7.6681 - mean_absolute_error: 1.4077 - val_loss: 5.4186 - val_mean_absolute_error: 0.8029 - learning_rate: 7.0000e-04
Epoch 34/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 25ms/step - loss: 2.6862 - mean_absolute_error: 1.1439[1m 16/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.7173 - mean_absolute_error: 1.3147 [1m 33/123[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 6.0905 - mean_absolute_error: 1.3310[1m 48/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 6.1549 - mean_absolute_error: 1.3321[1m 63/123[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 6.2628 - mean_absolute_error: 1.3299[1m 78/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 6.5633 - mean_absolute_error: 1.3329[1m 94/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 3ms/step - loss: 6.8267 - mean_absolute_error: 1.3357[1m110/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 3ms/step - loss: 7.0130 - mean_absolute_error: 1.3397
Epoch 34: val_loss did not improve from 5.27898
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 7.1193 - mean_absolute_error: 1.3421 - val_loss: 5.5103 - val_mean_absolute_error: 0.8085 - learning_rate: 7.0000e-04
Epoch 35/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 29ms/step - loss: 3.4265 - mean_absolute_error: 1.2760[1m 13/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.0911 - mean_absolute_error: 1.4001 [1m 29/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.3847 - mean_absolute_error: 1.3951[1m 44/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.2852 - mean_absolute_error: 1.3802[1m 59/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.4113 - mean_absolute_error: 1.3739[1m 74/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.7282 - mean_absolute_error: 1.3773[1m 89/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.9404 - mean_absolute_error: 1.3794[1m104/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 7.1231 - mean_absolute_error: 1.3819[1m118/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 7.2369 - mean_absolute_error: 1.3836
Epoch 35: val_loss did not improve from 5.27898
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 7.2644 - mean_absolute_error: 1.3835 - val_loss: 5.8082 - val_mean_absolute_error: 0.8018 - learning_rate: 7.0000e-04
Epoch 36/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 24ms/step - loss: 2.4472 - mean_absolute_error: 1.1904[1m 16/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 6.6676 - mean_absolute_error: 1.4109 [1m 31/123[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 6.7270 - mean_absolute_error: 1.4090[1m 44/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.5277 - mean_absolute_error: 1.3956[1m 58/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.4360 - mean_absolute_error: 1.3850[1m 72/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.5225 - mean_absolute_error: 1.3822[1m 88/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.6000 - mean_absolute_error: 1.3792[1m105/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 4ms/step - loss: 6.6889 - mean_absolute_error: 1.3778[1m120/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 6.7514 - mean_absolute_error: 1.3772
Epoch 36: val_loss did not improve from 5.27898
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 6.7604 - mean_absolute_error: 1.3767 - val_loss: 5.5720 - val_mean_absolute_error: 0.8137 - learning_rate: 7.0000e-04
Epoch 37/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 26ms/step - loss: 3.9394 - mean_absolute_error: 1.2656[1m 14/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.9505 - mean_absolute_error: 1.4055 [1m 27/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.4124 - mean_absolute_error: 1.4163[1m 41/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.4581 - mean_absolute_error: 1.4117[1m 57/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.5338 - mean_absolute_error: 1.4039[1m 71/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.6913 - mean_absolute_error: 1.4000[1m 85/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.8717 - mean_absolute_error: 1.3990[1m101/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 7.0114 - mean_absolute_error: 1.3987[1m116/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 7.0894 - mean_absolute_error: 1.3988
Epoch 37: val_loss did not improve from 5.27898
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 7.1100 - mean_absolute_error: 1.3981 - val_loss: 5.6886 - val_mean_absolute_error: 0.8083 - learning_rate: 7.0000e-04
Epoch 38/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 29ms/step - loss: 3.9079 - mean_absolute_error: 1.2661[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.0224 - mean_absolute_error: 1.4196 [1m 31/123[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.3896 - mean_absolute_error: 1.4201[1m 46/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.1679 - mean_absolute_error: 1.4018[1m 62/123[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.0564 - mean_absolute_error: 1.3901[1m 77/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.0375 - mean_absolute_error: 1.3839[1m 93/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 3ms/step - loss: 7.0027 - mean_absolute_error: 1.3787[1m107/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 4ms/step - loss: 6.9976 - mean_absolute_error: 1.3767[1m120/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 7.0003 - mean_absolute_error: 1.3757
Epoch 38: val_loss did not improve from 5.27898
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 6.9970 - mean_absolute_error: 1.3753 - val_loss: 5.6862 - val_mean_absolute_error: 0.8124 - learning_rate: 7.0000e-04
Epoch 39/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 28ms/step - loss: 3.0144 - mean_absolute_error: 1.1946[1m 16/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.7630 - mean_absolute_error: 1.3810 [1m 32/123[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.0122 - mean_absolute_error: 1.4032[1m 46/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.8786 - mean_absolute_error: 1.3990[1m 56/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.8523 - mean_absolute_error: 1.3963[1m 69/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.9540 - mean_absolute_error: 1.3953[1m 83/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.1053 - mean_absolute_error: 1.3973[1m 99/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 7.2337 - mean_absolute_error: 1.3992[1m115/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 7.3256 - mean_absolute_error: 1.4018
Epoch 39: val_loss did not improve from 5.27898

Epoch 39: ReduceLROnPlateau reducing learning rate to 0.0004900000232737511.
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 7.3544 - mean_absolute_error: 1.4023 - val_loss: 5.7387 - val_mean_absolute_error: 0.8054 - learning_rate: 7.0000e-04
Epoch 40/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 25ms/step - loss: 2.8302 - mean_absolute_error: 1.1743[1m 17/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 5.8100 - mean_absolute_error: 1.3825 [1m 30/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.0644 - mean_absolute_error: 1.3885[1m 44/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.0359 - mean_absolute_error: 1.3800[1m 57/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.0430 - mean_absolute_error: 1.3699[1m 71/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.2033 - mean_absolute_error: 1.3666[1m 86/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.3872 - mean_absolute_error: 1.3679[1m101/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 6.5017 - mean_absolute_error: 1.3691[1m117/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 6.5832 - mean_absolute_error: 1.3703
Epoch 40: val_loss did not improve from 5.27898
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 6.6021 - mean_absolute_error: 1.3700 - val_loss: 5.3883 - val_mean_absolute_error: 0.7993 - learning_rate: 4.9000e-04
Epoch 41/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 25ms/step - loss: 4.1123 - mean_absolute_error: 1.3609[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.5686 - mean_absolute_error: 1.3952 [1m 31/123[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 5.5605 - mean_absolute_error: 1.3723[1m 45/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 5.5381 - mean_absolute_error: 1.3607[1m 59/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.6376 - mean_absolute_error: 1.3569[1m 74/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.8823 - mean_absolute_error: 1.3594[1m 88/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.0651 - mean_absolute_error: 1.3616[1m104/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 3ms/step - loss: 6.2794 - mean_absolute_error: 1.3642[1m119/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 6.4286 - mean_absolute_error: 1.3657
Epoch 41: val_loss did not improve from 5.27898
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 6.4620 - mean_absolute_error: 1.3656 - val_loss: 5.2923 - val_mean_absolute_error: 0.8137 - learning_rate: 4.9000e-04
Epoch 42/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 26ms/step - loss: 4.2267 - mean_absolute_error: 1.1923[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.0524 - mean_absolute_error: 1.3632 [1m 30/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 6.2154 - mean_absolute_error: 1.3650[1m 45/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 6.0390 - mean_absolute_error: 1.3500[1m 59/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.0271 - mean_absolute_error: 1.3424[1m 73/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.1229 - mean_absolute_error: 1.3400[1m 89/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.2082 - mean_absolute_error: 1.3398[1m105/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 4ms/step - loss: 6.2777 - mean_absolute_error: 1.3412[1m121/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 6.3126 - mean_absolute_error: 1.3421
Epoch 42: val_loss did not improve from 5.27898
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 6.3131 - mean_absolute_error: 1.3420 - val_loss: 5.6182 - val_mean_absolute_error: 0.8186 - learning_rate: 4.9000e-04
Epoch 43/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 27ms/step - loss: 3.9719 - mean_absolute_error: 1.1812[1m 14/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.9958 - mean_absolute_error: 1.3755 [1m 29/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.9597 - mean_absolute_error: 1.4170[1m 43/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.0814 - mean_absolute_error: 1.4280[1m 58/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.0265 - mean_absolute_error: 1.4238[1m 73/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.0566 - mean_absolute_error: 1.4206[1m 88/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.0590 - mean_absolute_error: 1.4178[1m103/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 8.0229 - mean_absolute_error: 1.4149[1m118/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 7.9771 - mean_absolute_error: 1.4124
Epoch 43: val_loss improved from 5.27898 to 5.12180, saving model to population_growth_model_enhanced.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 7.9526 - mean_absolute_error: 1.4111 - val_loss: 5.1218 - val_mean_absolute_error: 0.7995 - learning_rate: 4.9000e-04
Epoch 44/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 29ms/step - loss: 4.0983 - mean_absolute_error: 1.4006[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.3246 - mean_absolute_error: 1.3783 [1m 29/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.4621 - mean_absolute_error: 1.3777[1m 42/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.4914 - mean_absolute_error: 1.3706[1m 56/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.5792 - mean_absolute_error: 1.3641[1m 71/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.7762 - mean_absolute_error: 1.3628[1m 85/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.8977 - mean_absolute_error: 1.3620[1m100/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 6.0194 - mean_absolute_error: 1.3618[1m116/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 6.1064 - mean_absolute_error: 1.3610
Epoch 44: val_loss did not improve from 5.12180
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 6.1255 - mean_absolute_error: 1.3597 - val_loss: 5.4856 - val_mean_absolute_error: 0.8045 - learning_rate: 4.9000e-04
Epoch 45/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 25ms/step - loss: 4.8950 - mean_absolute_error: 1.5218[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.0692 - mean_absolute_error: 1.3969 [1m 29/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.2177 - mean_absolute_error: 1.3845[1m 43/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.1328 - mean_absolute_error: 1.3689[1m 58/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.2024 - mean_absolute_error: 1.3589[1m 74/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.3834 - mean_absolute_error: 1.3573[1m 90/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.5369 - mean_absolute_error: 1.3574[1m106/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 4ms/step - loss: 6.6470 - mean_absolute_error: 1.3585[1m121/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 6.7098 - mean_absolute_error: 1.3585
Epoch 45: val_loss did not improve from 5.12180
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 6.7155 - mean_absolute_error: 1.3583 - val_loss: 5.1562 - val_mean_absolute_error: 0.7869 - learning_rate: 4.9000e-04
Epoch 46/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 24ms/step - loss: 3.5080 - mean_absolute_error: 1.2530[1m 14/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.1741 - mean_absolute_error: 1.3154 [1m 27/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.5776 - mean_absolute_error: 1.3389[1m 41/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.5995 - mean_absolute_error: 1.3323[1m 57/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.6795 - mean_absolute_error: 1.3296[1m 72/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.8829 - mean_absolute_error: 1.3316[1m 88/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.0430 - mean_absolute_error: 1.3347[1m102/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 6.1692 - mean_absolute_error: 1.3379[1m116/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 6.2569 - mean_absolute_error: 1.3407
Epoch 46: val_loss did not improve from 5.12180
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 6.2830 - mean_absolute_error: 1.3412 - val_loss: 5.8090 - val_mean_absolute_error: 0.7997 - learning_rate: 4.9000e-04
Epoch 47/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 27ms/step - loss: 2.1313 - mean_absolute_error: 1.0666[1m 14/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.8238 - mean_absolute_error: 1.2935 [1m 26/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.4797 - mean_absolute_error: 1.3366[1m 40/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.6176 - mean_absolute_error: 1.3417[1m 53/123[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.6832 - mean_absolute_error: 1.3419[1m 67/123[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.8797 - mean_absolute_error: 1.3447[1m 83/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.0554 - mean_absolute_error: 1.3480[1m 97/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 4ms/step - loss: 6.1697 - mean_absolute_error: 1.3509[1m110/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 4ms/step - loss: 6.2419 - mean_absolute_error: 1.3532
Epoch 47: val_loss did not improve from 5.12180
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 6.2858 - mean_absolute_error: 1.3537 - val_loss: 5.7172 - val_mean_absolute_error: 0.8077 - learning_rate: 4.9000e-04
Epoch 48/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 27ms/step - loss: 2.6075 - mean_absolute_error: 1.1908[1m 14/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.5045 - mean_absolute_error: 1.3172 [1m 29/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.0299 - mean_absolute_error: 1.3406[1m 44/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.0977 - mean_absolute_error: 1.3387[1m 59/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.1956 - mean_absolute_error: 1.3368[1m 74/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.3395 - mean_absolute_error: 1.3401[1m 88/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.4295 - mean_absolute_error: 1.3429[1m101/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 6.4949 - mean_absolute_error: 1.3455[1m117/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 6.5635 - mean_absolute_error: 1.3488
Epoch 48: val_loss did not improve from 5.12180
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 6.5752 - mean_absolute_error: 1.3490 - val_loss: 5.8373 - val_mean_absolute_error: 0.8104 - learning_rate: 4.9000e-04
Epoch 49/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 25ms/step - loss: 2.5018 - mean_absolute_error: 1.1279[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.6760 - mean_absolute_error: 1.2955 [1m 32/123[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 4.8589 - mean_absolute_error: 1.3040[1m 47/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 5.0112 - mean_absolute_error: 1.3086[1m 62/123[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.2408 - mean_absolute_error: 1.3113[1m 76/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.4451 - mean_absolute_error: 1.3154[1m 89/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.5891 - mean_absolute_error: 1.3192[1m105/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 4ms/step - loss: 5.7402 - mean_absolute_error: 1.3236[1m121/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 5.8517 - mean_absolute_error: 1.3269
Epoch 49: val_loss did not improve from 5.12180
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 5.8666 - mean_absolute_error: 1.3273 - val_loss: 5.6838 - val_mean_absolute_error: 0.8036 - learning_rate: 4.9000e-04
Epoch 50/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 24ms/step - loss: 5.0037 - mean_absolute_error: 1.4049[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.9629 - mean_absolute_error: 1.4006 [1m 30/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 6.0917 - mean_absolute_error: 1.3970[1m 45/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.0773 - mean_absolute_error: 1.3846[1m 61/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 6.2000 - mean_absolute_error: 1.3780[1m 75/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 6.3698 - mean_absolute_error: 1.3776[1m 90/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 3ms/step - loss: 6.4842 - mean_absolute_error: 1.3767[1m105/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 3ms/step - loss: 6.5777 - mean_absolute_error: 1.3776[1m120/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 3ms/step - loss: 6.6488 - mean_absolute_error: 1.3788
Epoch 50: val_loss did not improve from 5.12180
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 6.6590 - mean_absolute_error: 1.3787 - val_loss: 5.5044 - val_mean_absolute_error: 0.7881 - learning_rate: 4.9000e-04
Epoch 51/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 24ms/step - loss: 3.7640 - mean_absolute_error: 1.3814[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.2814 - mean_absolute_error: 1.4797 [1m 31/123[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 6.4972 - mean_absolute_error: 1.4575[1m 45/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 6.3102 - mean_absolute_error: 1.4319[1m 58/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.2044 - mean_absolute_error: 1.4132[1m 72/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.2292 - mean_absolute_error: 1.4026[1m 87/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.2555 - mean_absolute_error: 1.3950[1m101/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 6.3224 - mean_absolute_error: 1.3909[1m116/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 6.3837 - mean_absolute_error: 1.3884
Epoch 51: val_loss did not improve from 5.12180

Epoch 51: ReduceLROnPlateau reducing learning rate to 0.00034300000406801696.
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 6.4077 - mean_absolute_error: 1.3869 - val_loss: 5.2410 - val_mean_absolute_error: 0.8012 - learning_rate: 4.9000e-04
Epoch 52/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 27ms/step - loss: 3.3382 - mean_absolute_error: 1.2457[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.3391 - mean_absolute_error: 1.3570 [1m 31/123[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 5.5946 - mean_absolute_error: 1.3603[1m 44/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.5571 - mean_absolute_error: 1.3498[1m 57/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.5937 - mean_absolute_error: 1.3404[1m 73/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.7837 - mean_absolute_error: 1.3381[1m 88/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.9142 - mean_absolute_error: 1.3384[1m102/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 6.0315 - mean_absolute_error: 1.3404[1m117/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 6.1444 - mean_absolute_error: 1.3435
Epoch 52: val_loss did not improve from 5.12180
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 6.1762 - mean_absolute_error: 1.3440 - val_loss: 5.7061 - val_mean_absolute_error: 0.7962 - learning_rate: 3.4300e-04
Epoch 53/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m5s[0m 41ms/step - loss: 2.9859 - mean_absolute_error: 1.2821[1m 10/123[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 6ms/step - loss: 4.6297 - mean_absolute_error: 1.3405 [1m 25/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.1016 - mean_absolute_error: 1.3591[1m 39/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.1020 - mean_absolute_error: 1.3478[1m 53/123[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.1148 - mean_absolute_error: 1.3386[1m 69/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.2919 - mean_absolute_error: 1.3383[1m 84/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.4067 - mean_absolute_error: 1.3390[1m 98/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 4ms/step - loss: 5.4837 - mean_absolute_error: 1.3384[1m113/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 5.5488 - mean_absolute_error: 1.3386
Epoch 53: val_loss did not improve from 5.12180
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 5.5931 - mean_absolute_error: 1.3385 - val_loss: 5.7232 - val_mean_absolute_error: 0.7884 - learning_rate: 3.4300e-04
Epoch 54/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 24ms/step - loss: 6.6004 - mean_absolute_error: 1.4314[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.6362 - mean_absolute_error: 1.4144 [1m 30/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.5803 - mean_absolute_error: 1.3852[1m 45/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.4812 - mean_absolute_error: 1.3631[1m 61/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.5603 - mean_absolute_error: 1.3505[1m 77/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 5.7085 - mean_absolute_error: 1.3471[1m 93/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 3ms/step - loss: 5.8477 - mean_absolute_error: 1.3451[1m108/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 3ms/step - loss: 5.9678 - mean_absolute_error: 1.3456
Epoch 54: val_loss did not improve from 5.12180
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 4ms/step - loss: 6.0565 - mean_absolute_error: 1.3455 - val_loss: 5.7770 - val_mean_absolute_error: 0.7925 - learning_rate: 3.4300e-04
Epoch 55/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 26ms/step - loss: 3.1221 - mean_absolute_error: 1.2616[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.2206 - mean_absolute_error: 1.3738 [1m 31/123[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.9207 - mean_absolute_error: 1.3565[1m 46/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.7659 - mean_absolute_error: 1.3436[1m 60/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.7621 - mean_absolute_error: 1.3389[1m 76/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.8195 - mean_absolute_error: 1.3398[1m 92/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.8598 - mean_absolute_error: 1.3403[1m106/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 4ms/step - loss: 5.9295 - mean_absolute_error: 1.3425[1m118/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 5.9742 - mean_absolute_error: 1.3437
Epoch 55: val_loss did not improve from 5.12180
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 5.9870 - mean_absolute_error: 1.3436 - val_loss: 5.5271 - val_mean_absolute_error: 0.7902 - learning_rate: 3.4300e-04
Epoch 56/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 23ms/step - loss: 2.5794 - mean_absolute_error: 1.0930[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.1997 - mean_absolute_error: 1.3223 [1m 31/123[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 5.5268 - mean_absolute_error: 1.3332[1m 47/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 5.4799 - mean_absolute_error: 1.3292[1m 62/123[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 5.5046 - mean_absolute_error: 1.3246[1m 77/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.6262 - mean_absolute_error: 1.3268[1m 92/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.7323 - mean_absolute_error: 1.3299[1m107/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 4ms/step - loss: 5.8126 - mean_absolute_error: 1.3336[1m122/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 5.8692 - mean_absolute_error: 1.3361
Epoch 56: val_loss did not improve from 5.12180
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 5.8737 - mean_absolute_error: 1.3363 - val_loss: 5.5760 - val_mean_absolute_error: 0.7800 - learning_rate: 3.4300e-04
Epoch 57/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 25ms/step - loss: 3.6475 - mean_absolute_error: 1.2941[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.1470 - mean_absolute_error: 1.3498 [1m 31/123[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 5.3406 - mean_absolute_error: 1.3506[1m 45/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.3022 - mean_absolute_error: 1.3437[1m 60/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.3863 - mean_absolute_error: 1.3398[1m 73/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.5545 - mean_absolute_error: 1.3423[1m 87/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.7042 - mean_absolute_error: 1.3452[1m102/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 5.8435 - mean_absolute_error: 1.3487[1m118/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 5.9482 - mean_absolute_error: 1.3519
Epoch 57: val_loss did not improve from 5.12180
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 5.9739 - mean_absolute_error: 1.3524 - val_loss: 5.6134 - val_mean_absolute_error: 0.7949 - learning_rate: 3.4300e-04
Epoch 58/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 26ms/step - loss: 3.2509 - mean_absolute_error: 1.2522[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.8605 - mean_absolute_error: 1.3554 [1m 31/123[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 5.0214 - mean_absolute_error: 1.3576[1m 46/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 4.9635 - mean_absolute_error: 1.3431[1m 60/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.0366 - mean_absolute_error: 1.3367[1m 75/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 5.2048 - mean_absolute_error: 1.3370[1m 89/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.3097 - mean_absolute_error: 1.3371[1m102/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 5.4180 - mean_absolute_error: 1.3382[1m116/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 5.5204 - mean_absolute_error: 1.3400
Epoch 58: val_loss did not improve from 5.12180
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 5.5613 - mean_absolute_error: 1.3403 - val_loss: 5.6509 - val_mean_absolute_error: 0.8139 - learning_rate: 3.4300e-04
Epoch 59/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 28ms/step - loss: 6.8402 - mean_absolute_error: 1.4310[1m 14/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.4577 - mean_absolute_error: 1.3570 [1m 29/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.4085 - mean_absolute_error: 1.3312[1m 43/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.3007 - mean_absolute_error: 1.3167[1m 57/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.3243 - mean_absolute_error: 1.3090[1m 73/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.5036 - mean_absolute_error: 1.3107[1m 87/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.6167 - mean_absolute_error: 1.3131[1m100/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 5.7312 - mean_absolute_error: 1.3160[1m113/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 5.8198 - mean_absolute_error: 1.3189
Epoch 59: val_loss did not improve from 5.12180

Epoch 59: ReduceLROnPlateau reducing learning rate to 0.00024009999469853935.
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 5.8629 - mean_absolute_error: 1.3199 - val_loss: 5.7304 - val_mean_absolute_error: 0.7919 - learning_rate: 3.4300e-04
Epoch 60/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 25ms/step - loss: 4.3671 - mean_absolute_error: 1.2683[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.0683 - mean_absolute_error: 1.3574 [1m 31/123[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.7994 - mean_absolute_error: 1.3538[1m 45/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.6550 - mean_absolute_error: 1.3458[1m 60/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.6595 - mean_absolute_error: 1.3403[1m 75/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.7591 - mean_absolute_error: 1.3407[1m 89/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.8279 - mean_absolute_error: 1.3419[1m103/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 5.8995 - mean_absolute_error: 1.3440[1m118/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 5.9664 - mean_absolute_error: 1.3459
Epoch 60: val_loss did not improve from 5.12180
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 5.9824 - mean_absolute_error: 1.3461 - val_loss: 5.6999 - val_mean_absolute_error: 0.7936 - learning_rate: 2.4010e-04
Epoch 61/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 30ms/step - loss: 2.5610 - mean_absolute_error: 1.2215[1m 13/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.7809 - mean_absolute_error: 1.3583 [1m 27/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.2199 - mean_absolute_error: 1.3645[1m 40/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.1896 - mean_absolute_error: 1.3552[1m 51/123[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.1324 - mean_absolute_error: 1.3456[1m 65/123[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.2760 - mean_absolute_error: 1.3427[1m 78/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.4025 - mean_absolute_error: 1.3426[1m 91/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.4916 - mean_absolute_error: 1.3416[1m104/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 5.5745 - mean_absolute_error: 1.3421[1m118/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 5.6396 - mean_absolute_error: 1.3429
Epoch 61: val_loss did not improve from 5.12180
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 5.6542 - mean_absolute_error: 1.3426 - val_loss: 5.6553 - val_mean_absolute_error: 0.7913 - learning_rate: 2.4010e-04
Epoch 62/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 26ms/step - loss: 2.7666 - mean_absolute_error: 1.1413[1m 13/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.9511 - mean_absolute_error: 1.2976 [1m 27/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.4208 - mean_absolute_error: 1.3081[1m 42/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.5243 - mean_absolute_error: 1.3064[1m 56/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.6953 - mean_absolute_error: 1.3085[1m 69/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.8747 - mean_absolute_error: 1.3115[1m 83/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.9796 - mean_absolute_error: 1.3143[1m 98/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 4ms/step - loss: 6.0692 - mean_absolute_error: 1.3170[1m112/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 6.1308 - mean_absolute_error: 1.3204
Epoch 62: val_loss did not improve from 5.12180
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 6.1536 - mean_absolute_error: 1.3218 - val_loss: 5.7693 - val_mean_absolute_error: 0.7922 - learning_rate: 2.4010e-04
Epoch 63/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 28ms/step - loss: 2.6425 - mean_absolute_error: 1.1270[1m 14/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.9591 - mean_absolute_error: 1.3267 [1m 29/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.1950 - mean_absolute_error: 1.3271[1m 42/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.2207 - mean_absolute_error: 1.3181[1m 54/123[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.2587 - mean_absolute_error: 1.3119[1m 67/123[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.3681 - mean_absolute_error: 1.3100[1m 81/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.4617 - mean_absolute_error: 1.3106[1m 95/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 4ms/step - loss: 5.5369 - mean_absolute_error: 1.3122[1m110/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 4ms/step - loss: 5.6058 - mean_absolute_error: 1.3156
Epoch 63: val_loss did not improve from 5.12180
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 5.6458 - mean_absolute_error: 1.3168 - val_loss: 5.7454 - val_mean_absolute_error: 0.7839 - learning_rate: 2.4010e-04
Epoch 64/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 26ms/step - loss: 3.6516 - mean_absolute_error: 1.4290[1m 14/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.2807 - mean_absolute_error: 1.3505 [1m 27/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.5075 - mean_absolute_error: 1.3435[1m 39/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.4411 - mean_absolute_error: 1.3355[1m 52/123[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.4386 - mean_absolute_error: 1.3293[1m 66/123[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.6261 - mean_absolute_error: 1.3292[1m 78/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.7263 - mean_absolute_error: 1.3304[1m 91/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.8074 - mean_absolute_error: 1.3310[1m105/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 4ms/step - loss: 5.8915 - mean_absolute_error: 1.3327[1m118/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 5.9429 - mean_absolute_error: 1.3337
Epoch 64: val_loss did not improve from 5.12180
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 5.9532 - mean_absolute_error: 1.3335 - val_loss: 5.5986 - val_mean_absolute_error: 0.7831 - learning_rate: 2.4010e-04
Epoch 65/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 24ms/step - loss: 1.6520 - mean_absolute_error: 0.9885[1m 14/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.7157 - mean_absolute_error: 1.2617 [1m 27/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.0827 - mean_absolute_error: 1.3032[1m 40/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.0528 - mean_absolute_error: 1.3077[1m 55/123[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.0817 - mean_absolute_error: 1.3070[1m 69/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.2176 - mean_absolute_error: 1.3085[1m 82/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.3561 - mean_absolute_error: 1.3123[1m 96/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 4ms/step - loss: 5.4884 - mean_absolute_error: 1.3164[1m110/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 4ms/step - loss: 5.6004 - mean_absolute_error: 1.3214
Epoch 65: val_loss did not improve from 5.12180
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 5.6755 - mean_absolute_error: 1.3238 - val_loss: 5.7003 - val_mean_absolute_error: 0.7948 - learning_rate: 2.4010e-04
Epoch 66/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 30ms/step - loss: 2.6550 - mean_absolute_error: 1.1769[1m 14/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.3409 - mean_absolute_error: 1.3393 [1m 24/123[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m0s[0m 5ms/step - loss: 5.4402 - mean_absolute_error: 1.3333[1m 35/123[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 5ms/step - loss: 5.2995 - mean_absolute_error: 1.3208[1m 49/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.2025 - mean_absolute_error: 1.3118[1m 63/123[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.3439 - mean_absolute_error: 1.3127[1m 79/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.4969 - mean_absolute_error: 1.3166[1m 94/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 4ms/step - loss: 5.5795 - mean_absolute_error: 1.3185[1m109/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 4ms/step - loss: 5.6513 - mean_absolute_error: 1.3214
Epoch 66: val_loss did not improve from 5.12180
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 5.7076 - mean_absolute_error: 1.3226 - val_loss: 5.5785 - val_mean_absolute_error: 0.7849 - learning_rate: 2.4010e-04
Epoch 67/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 30ms/step - loss: 2.0026 - mean_absolute_error: 0.9989[1m 14/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 3.9831 - mean_absolute_error: 1.2129 [1m 28/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.4081 - mean_absolute_error: 1.2548[1m 42/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.5304 - mean_absolute_error: 1.2701[1m 56/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.6605 - mean_absolute_error: 1.2754[1m 71/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.9022 - mean_absolute_error: 1.2843[1m 87/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.0872 - mean_absolute_error: 1.2920[1m102/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 5.2177 - mean_absolute_error: 1.2985[1m117/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 5.3071 - mean_absolute_error: 1.3030
Epoch 67: val_loss did not improve from 5.12180

Epoch 67: ReduceLROnPlateau reducing learning rate to 0.00016806999628897755.
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 5.3325 - mean_absolute_error: 1.3041 - val_loss: 5.6131 - val_mean_absolute_error: 0.7865 - learning_rate: 2.4010e-04
Epoch 68/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m4s[0m 33ms/step - loss: 3.3482 - mean_absolute_error: 1.1414[1m 14/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.9730 - mean_absolute_error: 1.2950 [1m 28/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.9930 - mean_absolute_error: 1.2893[1m 43/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.8200 - mean_absolute_error: 1.2750[1m 56/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.8029 - mean_absolute_error: 1.2713[1m 70/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.9231 - mean_absolute_error: 1.2734[1m 84/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.0690 - mean_absolute_error: 1.2773[1m 99/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 5.1896 - mean_absolute_error: 1.2811[1m114/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 5.2885 - mean_absolute_error: 1.2853
Epoch 68: val_loss did not improve from 5.12180
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 5.3278 - mean_absolute_error: 1.2867 - val_loss: 5.2654 - val_mean_absolute_error: 0.7828 - learning_rate: 1.6807e-04
Epoch 68: early stopping
Restoring model weights from the end of the best epoch: 43.
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
Saved model to 'population_growth_model.h5'
Traceback (most recent call last):
  File "/home/kristian/my_project/TFproject/main.py", line 201, in <module>
    main()
  File "/home/kristian/my_project/TFproject/main.py", line 194, in main
    train_model_workflow(args)
  File "/home/kristian/my_project/TFproject/utils.py", line 19, in wrapper
    result = func(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kristian/my_project/TFproject/main.py", line 86, in train_model_workflow
    plot_training_history(history, output_file=f'training_history_{args.output_prefix}.png')
  File "/home/kristian/my_project/TFproject/evaluation.py", line 26, in plot_training_history
    plt.plot(history.history['mae'], label='Training MAE')
             ~~~~~~~~~~~~~~~^^^^^^^
KeyError: 'mae'
