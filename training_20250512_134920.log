2025-05-12 13:49:21.858762: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2025-05-12 13:49:21.876109: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:467] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered
WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
E0000 00:00:1747050561.900950   29454 cuda_dnn.cc:8579] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered
E0000 00:00:1747050561.906242   29454 cuda_blas.cc:1407] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
W0000 00:00:1747050561.924701   29454 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
W0000 00:00:1747050561.924792   29454 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
W0000 00:00:1747050561.924798   29454 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
W0000 00:00:1747050561.924800   29454 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
2025-05-12 13:49:21.931454: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 AVX_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
Starting model training workflow...
Found 1 GPUs: [PhysicalDevice(name='/physical_device:GPU:0', device_type='GPU')]
GPU is available for training
Looking for population data files...
Loading data from full_population_data.csv
Loaded 126678 records.
Data contains 9 years: [np.int64(2016), np.int64(2017), np.int64(2018), np.int64(2019), np.int64(2020), np.int64(2021), np.int64(2022), np.int64(2023), np.int64(2024)]
Analyzing municipalities in the dataset...
Found 838 municipalities in the dataset.

Found 83 municipalities with data for all 9 years.

Selected municipalities for analysis:
                       name  records  grunnkretser  years   population
kommunenummer                                                         
1127              Randaberg       81             9      9  1245.419753
301                    Oslo     5253           615      9  1178.531389
1124                   Sola      234            26      9  1083.026667
1103              Stavanger     2107           247      9   600.026718
1532                  Giske      135            15      9   561.370370
1121                   Time      315            35      9   544.774603
1149                 Karmøy      711            79      9   536.957806
1516                Ulstein      153            17      9   515.758389
1122                Gjesdal      216            24      9   515.414286
1120                  Klepp      351            39      9   508.418338
1531                   Sula      171            19      9   490.631579
1130                 Strand      239            27      9   489.062762
1119                     Hå      378            42      9   456.457447
1528              Sykkylven      153            17      9   448.535948
1505           Kristiansund      513            57      9   425.097466
1144                Kvitsøy       63             7      9    75.238095
1838              Gildeskål      243            27      9    75.566524
1839                 Beiarn      117            13      9    78.880342
1816              Vevelstad       54             6      9    80.759259
1836                  Rødøy      126            14      9    92.495726
1811                 Bindal      135            15      9   100.289062
1853                 Evenes      117            13      9   106.956140
1848                Steigen      216            24      9   108.794393
1815                   Vega       99            11      9   111.193878
1826           Hattfjelldal      108            12      9   111.537037
1867                     Bø      207            23      9   116.268657
1874               Moskenes       81             9      9   119.447368
1827                  Dønna       99            11      9   126.303030
1859               Flakstad       90            10      9   127.000000
1573                  Smøla      144            16      9   134.846154
Saved information about selected municipalities to 'selected_municipalities.csv'

Filtered dataset contains 12909 records from 30 municipalities.
Preprocessing data...
Dropped 154 rows with missing values in essential columns.
/home/kristian/my_project/TFproject/data_pipeline.py:122: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['year'] = df['year'].astype(int)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
/home/kristian/my_project/TFproject/data_pipeline.py:128: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].replace([np.inf, -np.inf], np.nan)
/home/kristian/my_project/TFproject/data_pipeline.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[col] = df[col].fillna(0)
Creating all features...
/home/kristian/my_project/TFproject/features.py:12: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[numeric_cols] = df[numeric_cols].fillna(0)
Calculating age distribution ratios for 19 age groups...
/home/kristian/my_project/TFproject/features.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = np.where(df['totalBefolkning'] > 0,
/home/kristian/my_project/TFproject/features.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = df[f'{col}_ratio'].clip(0, 1)
/home/kristian/my_project/TFproject/features.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = np.where(df['totalBefolkning'] > 0,
/home/kristian/my_project/TFproject/features.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = df[f'{col}_ratio'].clip(0, 1)
/home/kristian/my_project/TFproject/features.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = np.where(df['totalBefolkning'] > 0,
/home/kristian/my_project/TFproject/features.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = df[f'{col}_ratio'].clip(0, 1)
/home/kristian/my_project/TFproject/features.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = np.where(df['totalBefolkning'] > 0,
/home/kristian/my_project/TFproject/features.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = df[f'{col}_ratio'].clip(0, 1)
/home/kristian/my_project/TFproject/features.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = np.where(df['totalBefolkning'] > 0,
/home/kristian/my_project/TFproject/features.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = df[f'{col}_ratio'].clip(0, 1)
/home/kristian/my_project/TFproject/features.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = np.where(df['totalBefolkning'] > 0,
/home/kristian/my_project/TFproject/features.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = df[f'{col}_ratio'].clip(0, 1)
/home/kristian/my_project/TFproject/features.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = np.where(df['totalBefolkning'] > 0,
/home/kristian/my_project/TFproject/features.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = df[f'{col}_ratio'].clip(0, 1)
/home/kristian/my_project/TFproject/features.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = np.where(df['totalBefolkning'] > 0,
/home/kristian/my_project/TFproject/features.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = df[f'{col}_ratio'].clip(0, 1)
/home/kristian/my_project/TFproject/features.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = np.where(df['totalBefolkning'] > 0,
/home/kristian/my_project/TFproject/features.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = df[f'{col}_ratio'].clip(0, 1)
/home/kristian/my_project/TFproject/features.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = np.where(df['totalBefolkning'] > 0,
/home/kristian/my_project/TFproject/features.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = df[f'{col}_ratio'].clip(0, 1)
/home/kristian/my_project/TFproject/features.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = np.where(df['totalBefolkning'] > 0,
/home/kristian/my_project/TFproject/features.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = df[f'{col}_ratio'].clip(0, 1)
/home/kristian/my_project/TFproject/features.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = np.where(df['totalBefolkning'] > 0,
/home/kristian/my_project/TFproject/features.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = df[f'{col}_ratio'].clip(0, 1)
/home/kristian/my_project/TFproject/features.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = np.where(df['totalBefolkning'] > 0,
/home/kristian/my_project/TFproject/features.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = df[f'{col}_ratio'].clip(0, 1)
/home/kristian/my_project/TFproject/features.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = np.where(df['totalBefolkning'] > 0,
/home/kristian/my_project/TFproject/features.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = df[f'{col}_ratio'].clip(0, 1)
/home/kristian/my_project/TFproject/features.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = np.where(df['totalBefolkning'] > 0,
/home/kristian/my_project/TFproject/features.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = df[f'{col}_ratio'].clip(0, 1)
/home/kristian/my_project/TFproject/features.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = np.where(df['totalBefolkning'] > 0,
/home/kristian/my_project/TFproject/features.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = df[f'{col}_ratio'].clip(0, 1)
/home/kristian/my_project/TFproject/features.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = np.where(df['totalBefolkning'] > 0,
/home/kristian/my_project/TFproject/features.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = df[f'{col}_ratio'].clip(0, 1)
/home/kristian/my_project/TFproject/features.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = np.where(df['totalBefolkning'] > 0,
/home/kristian/my_project/TFproject/features.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = df[f'{col}_ratio'].clip(0, 1)
/home/kristian/my_project/TFproject/features.py:20: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = np.where(df['totalBefolkning'] > 0,
/home/kristian/my_project/TFproject/features.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_ratio'] = df[f'{col}_ratio'].clip(0, 1)
/home/kristian/my_project/TFproject/features.py:28: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['children_0_14'] = df[children_cols].sum(axis=1)
/home/kristian/my_project/TFproject/features.py:29: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['children_ratio'] = (df['children_0_14'] / df['totalBefolkning'].replace(0, 1)).clip(0, 1)
/home/kristian/my_project/TFproject/features.py:33: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['elderly'] = df[elderly_cols].sum(axis=1)
/home/kristian/my_project/TFproject/features.py:34: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['elderly_ratio'] = (df['elderly'] / df['totalBefolkning'].replace(0, 1)).clip(0, 1)
/home/kristian/my_project/TFproject/features.py:38: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['working_age'] = df[working_age_cols].sum(axis=1)
/home/kristian/my_project/TFproject/features.py:39: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['working_age_ratio'] = (df['working_age'] / df['totalBefolkning'].replace(0, 1)).clip(0, 1)
/home/kristian/my_project/TFproject/features.py:43: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['gender_ratio'] = np.where(df['antallKvinner'] > 0,
/home/kristian/my_project/TFproject/features.py:47: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['gender_ratio'] = df['gender_ratio'].clip(0.5, 2)
Creating time-based features...
/home/kristian/my_project/TFproject/features.py:56: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['growth_rate'] = df.groupby(group_col)['totalBefolkning'].pct_change()
/home/kristian/my_project/TFproject/features.py:58: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['growth_rate'] = df['growth_rate'].clip(-1, 5).fillna(0)
/home/kristian/my_project/TFproject/features.py:61: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['pop_change'] = df.groupby(group_col)['totalBefolkning'].diff()
/home/kristian/my_project/TFproject/features.py:64: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['pop_change'] = df['pop_change'].clip(-max_change, max_change).fillna(0)
/home/kristian/my_project/TFproject/features.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_lag1'] = df.groupby(group_col)[col].shift(1)
/home/kristian/my_project/TFproject/features.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_lag1'] = df[f'{col}_lag1'].fillna(0)
/home/kristian/my_project/TFproject/features.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_lag1'] = df.groupby(group_col)[col].shift(1)
/home/kristian/my_project/TFproject/features.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_lag1'] = df[f'{col}_lag1'].fillna(0)
/home/kristian/my_project/TFproject/features.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_lag1'] = df.groupby(group_col)[col].shift(1)
/home/kristian/my_project/TFproject/features.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_lag1'] = df[f'{col}_lag1'].fillna(0)
/home/kristian/my_project/TFproject/features.py:73: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_lag1'] = df.groupby(group_col)[col].shift(1)
/home/kristian/my_project/TFproject/features.py:74: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[f'{col}_lag1'] = df[f'{col}_lag1'].fillna(0)
Feature engineering complete
Finding grunnkretser with at least two consecutive years of data...
Found 1479 grunnkretser with consecutive years of data
Final count: 1479 grunnkretser
Creating input-target pairs with target column: folketilvekst
Using folketilvekst as target variable
Using 57 features
Sample features: ['statistikkÅr', 'totalBefolkning', 'antallMenn', 'antallKvinner', 'befolkning0Til04År', 'befolkning05Til09År', 'befolkning10Til14År', 'befolkning15Til19År', 'befolkning20Til24År', 'befolkning25Til29År']...
Creating input-target pairs from 12755 filtered records...
Created 11237 input-target pairs from 1479 grunnkretser
X shape: (11237, 57), y shape: (11237,)
Saved feature list to model_features.csv
Splitting data into train, validation, and test sets...
Train: 1035 grunnkretser
Validation: 222 grunnkretser
Test: 222 grunnkretser
Training set: (7834, 57)
Validation set: (1705, 57)
Testing set: (1698, 57)
Scaling the data...
Training model...
Building model with input shape (57,)
/home/kristian/my_project/venv/lib/python3.12/site-packages/keras/src/layers/core/input_layer.py:27: UserWarning: Argument `input_shape` is deprecated. Use `shape` instead.
  warnings.warn(
I0000 00:00:1747050572.970408   29454 gpu_device.cc:2019] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 5564 MB memory:  -> device: 0, name: NVIDIA GeForce RTX 3070 Ti Laptop GPU, pci bus id: 0000:01:00.0, compute capability: 8.6
Model: "sequential"
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓
┃ Layer (type)                    ┃ Output Shape           ┃       Param # ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩
│ dense (Dense)                   │ (None, 128)            │         7,424 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ batch_normalization             │ (None, 128)            │           512 │
│ (BatchNormalization)            │                        │               │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dropout (Dropout)               │ (None, 128)            │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense_1 (Dense)                 │ (None, 64)             │         8,256 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ batch_normalization_1           │ (None, 64)             │           256 │
│ (BatchNormalization)            │                        │               │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dropout_1 (Dropout)             │ (None, 64)             │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense_2 (Dense)                 │ (None, 32)             │         2,080 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ batch_normalization_2           │ (None, 32)             │           128 │
│ (BatchNormalization)            │                        │               │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dropout_2 (Dropout)             │ (None, 32)             │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense_3 (Dense)                 │ (None, 1)              │            33 │
└─────────────────────────────────┴────────────────────────┴───────────────┘
 Total params: 18,689 (73.00 KB)
 Trainable params: 18,241 (71.25 KB)
 Non-trainable params: 448 (1.75 KB)
Training model for up to 150 epochs with batch size 64...
Epoch 1/150
WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
I0000 00:00:1747050575.582137   29648 service.cc:152] XLA service 0x7fbcac0025e0 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:
I0000 00:00:1747050575.582175   29648 service.cc:160]   StreamExecutor device (0): NVIDIA GeForce RTX 3070 Ti Laptop GPU, Compute Capability 8.6
2025-05-12 13:49:35.625095: I tensorflow/compiler/mlir/tensorflow/utils/dump_mlir_util.cc:269] disabling MLIR crash reproducer, set env var `MLIR_CRASH_REPRODUCER_DIRECTORY` to enable.
I0000 00:00:1747050575.920729   29648 cuda_dnn.cc:529] Loaded cuDNN version 90300
I0000 00:00:1747050577.816985   29648 device_compiler.h:188] Compiled cluster using XLA!  This line is logged at most once for the lifetime of the process.
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m7:58[0m 4s/step - loss: 14.4529 - mean_absolute_error: 1.8471[1m 19/123[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 28.2623 - mean_absolute_error: 1.9726 [1m 39/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 26.0677 - mean_absolute_error: 1.8872[1m 59/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 24.4125 - mean_absolute_error: 1.8230[1m 78/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 24.1006 - mean_absolute_error: 1.7915[1m 95/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 3ms/step - loss: 23.9563 - mean_absolute_error: 1.7712[1m113/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 3ms/step - loss: 23.7481 - mean_absolute_error: 1.7547[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 21ms/step - loss: 23.5686 - mean_absolute_error: 1.7458
Epoch 1: val_loss improved from inf to 6.70161, saving model to population_growth_model_enhanced.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m7s[0m 28ms/step - loss: 23.5494 - mean_absolute_error: 1.7449 - val_loss: 6.7016 - val_mean_absolute_error: 0.8592 - learning_rate: 0.0010
Epoch 2/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 24ms/step - loss: 1.9367 - mean_absolute_error: 0.9565[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 14.5596 - mean_absolute_error: 1.4372[1m 29/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 15.1572 - mean_absolute_error: 1.4804[1m 43/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 14.9423 - mean_absolute_error: 1.4797[1m 58/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 14.8290 - mean_absolute_error: 1.4749[1m 73/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 15.2774 - mean_absolute_error: 1.4774[1m 88/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 15.7249 - mean_absolute_error: 1.4816[1m103/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 16.1152 - mean_absolute_error: 1.4855[1m115/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 16.2734 - mean_absolute_error: 1.4871
Epoch 2: val_loss improved from 6.70161 to 6.31507, saving model to population_growth_model_enhanced.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 16.3239 - mean_absolute_error: 1.4871 - val_loss: 6.3151 - val_mean_absolute_error: 0.8315 - learning_rate: 0.0010
Epoch 3/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 28ms/step - loss: 2.0425 - mean_absolute_error: 1.0554[1m 14/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 13.6405 - mean_absolute_error: 1.3918[1m 29/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 14.1569 - mean_absolute_error: 1.4099[1m 43/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 13.7574 - mean_absolute_error: 1.4001[1m 58/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 13.5659 - mean_absolute_error: 1.3960[1m 74/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 13.9977 - mean_absolute_error: 1.4002[1m 89/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 14.4423 - mean_absolute_error: 1.4067[1m105/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 4ms/step - loss: 14.8538 - mean_absolute_error: 1.4138[1m121/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 3ms/step - loss: 15.0579 - mean_absolute_error: 1.4180
Epoch 3: val_loss improved from 6.31507 to 6.31103, saving model to population_growth_model_enhanced.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 15.0779 - mean_absolute_error: 1.4185 - val_loss: 6.3110 - val_mean_absolute_error: 0.8748 - learning_rate: 0.0010
Epoch 4/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 26ms/step - loss: 2.9784 - mean_absolute_error: 1.1237[1m 14/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 12.4895 - mean_absolute_error: 1.4329[1m 29/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 12.8815 - mean_absolute_error: 1.4429[1m 44/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 12.6297 - mean_absolute_error: 1.4271[1m 58/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 12.5636 - mean_absolute_error: 1.4149[1m 73/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 13.0390 - mean_absolute_error: 1.4141[1m 88/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 13.5377 - mean_absolute_error: 1.4171[1m104/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 14.0302 - mean_absolute_error: 1.4226[1m119/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 14.2867 - mean_absolute_error: 1.4255
Epoch 4: val_loss improved from 6.31103 to 6.16947, saving model to population_growth_model_enhanced.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 14.3324 - mean_absolute_error: 1.4257 - val_loss: 6.1695 - val_mean_absolute_error: 0.8533 - learning_rate: 0.0010
Epoch 5/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 25ms/step - loss: 2.5046 - mean_absolute_error: 1.0684[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.2353 - mean_absolute_error: 1.3706[1m 30/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.5187 - mean_absolute_error: 1.3792[1m 45/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.2921 - mean_absolute_error: 1.3654[1m 60/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.2983 - mean_absolute_error: 1.3580[1m 75/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.8956 - mean_absolute_error: 1.3623[1m 90/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 12.4331 - mean_absolute_error: 1.3689[1m103/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 12.8389 - mean_absolute_error: 1.3754[1m115/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 13.0843 - mean_absolute_error: 1.3805
Epoch 5: val_loss improved from 6.16947 to 6.02658, saving model to population_growth_model_enhanced.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 13.2039 - mean_absolute_error: 1.3830 - val_loss: 6.0266 - val_mean_absolute_error: 0.8927 - learning_rate: 0.0010
Epoch 6/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 25ms/step - loss: 2.6315 - mean_absolute_error: 1.0857[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 12.4266 - mean_absolute_error: 1.3968[1m 30/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 12.5538 - mean_absolute_error: 1.4073[1m 43/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 12.2796 - mean_absolute_error: 1.3966[1m 56/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 12.0952 - mean_absolute_error: 1.3878[1m 68/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 12.2607 - mean_absolute_error: 1.3841[1m 82/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 12.6801 - mean_absolute_error: 1.3863[1m 97/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 4ms/step - loss: 13.0750 - mean_absolute_error: 1.3894[1m111/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 13.3227 - mean_absolute_error: 1.3925
Epoch 6: val_loss improved from 6.02658 to 5.96684, saving model to population_growth_model_enhanced.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 13.4565 - mean_absolute_error: 1.3939 - val_loss: 5.9668 - val_mean_absolute_error: 0.8746 - learning_rate: 0.0010
Epoch 7/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 26ms/step - loss: 2.2366 - mean_absolute_error: 0.9847[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 12.1641 - mean_absolute_error: 1.3673[1m 28/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 12.4332 - mean_absolute_error: 1.3837[1m 41/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 12.1633 - mean_absolute_error: 1.3747[1m 55/123[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.9722 - mean_absolute_error: 1.3673[1m 68/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 12.1505 - mean_absolute_error: 1.3660[1m 82/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 12.5469 - mean_absolute_error: 1.3692[1m 97/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 4ms/step - loss: 12.9176 - mean_absolute_error: 1.3735[1m112/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 13.1387 - mean_absolute_error: 1.3777
Epoch 7: val_loss improved from 5.96684 to 5.90013, saving model to population_growth_model_enhanced.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 13.2305 - mean_absolute_error: 1.3793 - val_loss: 5.9001 - val_mean_absolute_error: 0.8669 - learning_rate: 0.0010
Epoch 8/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 27ms/step - loss: 2.6035 - mean_absolute_error: 1.1006[1m 16/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.2714 - mean_absolute_error: 1.3734[1m 29/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.4592 - mean_absolute_error: 1.3816[1m 43/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.2804 - mean_absolute_error: 1.3722[1m 59/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.1833 - mean_absolute_error: 1.3633[1m 73/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.5287 - mean_absolute_error: 1.3653[1m 88/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.9160 - mean_absolute_error: 1.3708[1m103/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 12.2981 - mean_absolute_error: 1.3783[1m118/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 12.5338 - mean_absolute_error: 1.3836
Epoch 8: val_loss did not improve from 5.90013
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 12.5869 - mean_absolute_error: 1.3845 - val_loss: 6.2380 - val_mean_absolute_error: 0.9143 - learning_rate: 0.0010
Epoch 9/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 25ms/step - loss: 3.1408 - mean_absolute_error: 1.1397[1m 14/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 10.9029 - mean_absolute_error: 1.3227[1m 28/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.4566 - mean_absolute_error: 1.3575[1m 43/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.1809 - mean_absolute_error: 1.3525[1m 58/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.0695 - mean_absolute_error: 1.3480[1m 73/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.4548 - mean_absolute_error: 1.3530[1m 87/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.8342 - mean_absolute_error: 1.3592[1m101/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 12.1782 - mean_absolute_error: 1.3664[1m115/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 12.3892 - mean_absolute_error: 1.3720
Epoch 9: val_loss did not improve from 5.90013
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 12.4553 - mean_absolute_error: 1.3734 - val_loss: 5.9442 - val_mean_absolute_error: 0.8839 - learning_rate: 0.0010
Epoch 10/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 25ms/step - loss: 2.4558 - mean_absolute_error: 1.1149[1m 14/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 12.1598 - mean_absolute_error: 1.4076[1m 27/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 12.3559 - mean_absolute_error: 1.4046[1m 40/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.9139 - mean_absolute_error: 1.3863[1m 54/123[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.5761 - mean_absolute_error: 1.3694[1m 68/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.6257 - mean_absolute_error: 1.3614[1m 82/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.8776 - mean_absolute_error: 1.3606[1m 96/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 4ms/step - loss: 12.1412 - mean_absolute_error: 1.3632[1m111/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 12.3218 - mean_absolute_error: 1.3669
Epoch 10: val_loss did not improve from 5.90013
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 12.4013 - mean_absolute_error: 1.3682 - val_loss: 5.9817 - val_mean_absolute_error: 0.9065 - learning_rate: 0.0010
Epoch 11/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 25ms/step - loss: 4.4124 - mean_absolute_error: 1.1578[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 10.4927 - mean_absolute_error: 1.3508[1m 30/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 10.6779 - mean_absolute_error: 1.3666[1m 43/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 10.4974 - mean_absolute_error: 1.3596[1m 58/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 10.4297 - mean_absolute_error: 1.3530[1m 72/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 10.7454 - mean_absolute_error: 1.3528[1m 85/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.0775 - mean_absolute_error: 1.3555[1m 98/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 4ms/step - loss: 11.3933 - mean_absolute_error: 1.3595[1m111/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 11.5943 - mean_absolute_error: 1.3623[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 4ms/step - loss: 11.7036 - mean_absolute_error: 1.3630
Epoch 11: val_loss did not improve from 5.90013
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 11.7090 - mean_absolute_error: 1.3630 - val_loss: 5.9023 - val_mean_absolute_error: 0.9561 - learning_rate: 0.0010
Epoch 12/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 25ms/step - loss: 3.6234 - mean_absolute_error: 1.2978[1m 14/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.1158 - mean_absolute_error: 1.4092[1m 30/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.2764 - mean_absolute_error: 1.4002[1m 45/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 10.8246 - mean_absolute_error: 1.3792[1m 59/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 10.6493 - mean_absolute_error: 1.3692[1m 73/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 10.8748 - mean_absolute_error: 1.3677[1m 87/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 11.1146 - mean_absolute_error: 1.3694[1m102/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 11.4043 - mean_absolute_error: 1.3742[1m118/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 11.5642 - mean_absolute_error: 1.3771
Epoch 12: val_loss did not improve from 5.90013
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 11.5902 - mean_absolute_error: 1.3770 - val_loss: 5.9147 - val_mean_absolute_error: 0.9122 - learning_rate: 0.0010
Epoch 13/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 30ms/step - loss: 2.0388 - mean_absolute_error: 1.1043[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.5837 - mean_absolute_error: 1.3180 [1m 28/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.9446 - mean_absolute_error: 1.3368[1m 41/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.0407 - mean_absolute_error: 1.3436[1m 54/123[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.0826 - mean_absolute_error: 1.3454[1m 67/123[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.4097 - mean_absolute_error: 1.3511[1m 81/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.8953 - mean_absolute_error: 1.3588[1m 94/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 4ms/step - loss: 10.2410 - mean_absolute_error: 1.3635[1m107/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 4ms/step - loss: 10.5246 - mean_absolute_error: 1.3686[1m120/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 10.7007 - mean_absolute_error: 1.3710
Epoch 13: val_loss improved from 5.90013 to 5.69580, saving model to population_growth_model_enhanced.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 10.7349 - mean_absolute_error: 1.3713 - val_loss: 5.6958 - val_mean_absolute_error: 0.8652 - learning_rate: 0.0010
Epoch 14/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 28ms/step - loss: 3.8720 - mean_absolute_error: 1.2656[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.6258 - mean_absolute_error: 1.3800 [1m 28/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.8011 - mean_absolute_error: 1.3743[1m 41/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.6627 - mean_absolute_error: 1.3588[1m 54/123[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.5695 - mean_absolute_error: 1.3455[1m 67/123[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.7784 - mean_absolute_error: 1.3390[1m 81/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.1699 - mean_absolute_error: 1.3390[1m 94/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 4ms/step - loss: 9.5208 - mean_absolute_error: 1.3421[1m108/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 4ms/step - loss: 9.8209 - mean_absolute_error: 1.3464[1m122/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 10.0058 - mean_absolute_error: 1.3482
Epoch 14: val_loss did not improve from 5.69580
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 10.0228 - mean_absolute_error: 1.3482 - val_loss: 5.7081 - val_mean_absolute_error: 0.8664 - learning_rate: 0.0010
Epoch 15/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 25ms/step - loss: 3.5615 - mean_absolute_error: 1.1635[1m 16/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 8.6011 - mean_absolute_error: 1.3591 [1m 31/123[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 8.7366 - mean_absolute_error: 1.3587[1m 45/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.5310 - mean_absolute_error: 1.3436[1m 58/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.5184 - mean_absolute_error: 1.3366[1m 73/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.8490 - mean_absolute_error: 1.3378[1m 89/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.2356 - mean_absolute_error: 1.3427[1m105/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 3ms/step - loss: 9.5617 - mean_absolute_error: 1.3482[1m120/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 3ms/step - loss: 9.7335 - mean_absolute_error: 1.3503
Epoch 15: val_loss improved from 5.69580 to 5.62117, saving model to population_growth_model_enhanced.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 9.7610 - mean_absolute_error: 1.3504 - val_loss: 5.6212 - val_mean_absolute_error: 0.9203 - learning_rate: 0.0010
Epoch 16/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 24ms/step - loss: 3.7854 - mean_absolute_error: 1.1113[1m 16/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.1858 - mean_absolute_error: 1.3395 [1m 32/123[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.4391 - mean_absolute_error: 1.3590[1m 48/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 9.1888 - mean_absolute_error: 1.3469[1m 65/123[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 9.2001 - mean_absolute_error: 1.3402[1m 81/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 3ms/step - loss: 9.4855 - mean_absolute_error: 1.3417[1m 95/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 3ms/step - loss: 9.7127 - mean_absolute_error: 1.3441[1m108/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 3ms/step - loss: 9.8910 - mean_absolute_error: 1.3472[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 3ms/step - loss: 10.0273 - mean_absolute_error: 1.3487
Epoch 16: val_loss did not improve from 5.62117
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 10.0337 - mean_absolute_error: 1.3488 - val_loss: 5.7441 - val_mean_absolute_error: 0.9192 - learning_rate: 0.0010
Epoch 17/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 25ms/step - loss: 1.9704 - mean_absolute_error: 1.0349[1m 16/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.2337 - mean_absolute_error: 1.4250 [1m 31/123[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.3093 - mean_absolute_error: 1.4138[1m 45/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.0601 - mean_absolute_error: 1.3932[1m 59/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.9599 - mean_absolute_error: 1.3771[1m 73/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.1330 - mean_absolute_error: 1.3709[1m 89/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.3239 - mean_absolute_error: 1.3688[1m104/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 9.5189 - mean_absolute_error: 1.3690[1m120/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 9.6435 - mean_absolute_error: 1.3692
Epoch 17: val_loss improved from 5.62117 to 5.59762, saving model to population_growth_model_enhanced.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 9.6579 - mean_absolute_error: 1.3689 - val_loss: 5.5976 - val_mean_absolute_error: 0.8801 - learning_rate: 0.0010
Epoch 18/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 26ms/step - loss: 3.6758 - mean_absolute_error: 1.1791[1m 16/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.9245 - mean_absolute_error: 1.3349 [1m 32/123[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 8.1620 - mean_absolute_error: 1.3437[1m 47/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.1384 - mean_absolute_error: 1.3333[1m 63/123[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 8.2248 - mean_absolute_error: 1.3249[1m 78/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 8.5864 - mean_absolute_error: 1.3266[1m 93/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 3ms/step - loss: 8.8792 - mean_absolute_error: 1.3296[1m109/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 3ms/step - loss: 9.1260 - mean_absolute_error: 1.3346
Epoch 18: val_loss did not improve from 5.59762
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 4ms/step - loss: 9.2514 - mean_absolute_error: 1.3365 - val_loss: 5.9782 - val_mean_absolute_error: 0.8710 - learning_rate: 0.0010
Epoch 19/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 31ms/step - loss: 3.0217 - mean_absolute_error: 1.1275[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.1119 - mean_absolute_error: 1.3340 [1m 31/123[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 8.2685 - mean_absolute_error: 1.3483[1m 43/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.0390 - mean_absolute_error: 1.3378[1m 55/123[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.9284 - mean_absolute_error: 1.3297[1m 69/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.0805 - mean_absolute_error: 1.3275[1m 85/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.4204 - mean_absolute_error: 1.3316[1m100/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 8.6971 - mean_absolute_error: 1.3381[1m114/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 8.8585 - mean_absolute_error: 1.3428
Epoch 19: val_loss did not improve from 5.59762
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 8.9292 - mean_absolute_error: 1.3439 - val_loss: 5.6123 - val_mean_absolute_error: 0.8849 - learning_rate: 0.0010
Epoch 20/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 32ms/step - loss: 1.7841 - mean_absolute_error: 0.9600[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.0342 - mean_absolute_error: 1.3306 [1m 31/123[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.4485 - mean_absolute_error: 1.3440[1m 45/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.3658 - mean_absolute_error: 1.3329[1m 60/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.4474 - mean_absolute_error: 1.3275[1m 75/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.8075 - mean_absolute_error: 1.3311[1m 90/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.1358 - mean_absolute_error: 1.3372[1m104/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 8.4055 - mean_absolute_error: 1.3436[1m119/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 8.5997 - mean_absolute_error: 1.3484
Epoch 20: val_loss did not improve from 5.59762
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 8.6384 - mean_absolute_error: 1.3492 - val_loss: 6.0275 - val_mean_absolute_error: 0.8226 - learning_rate: 0.0010
Epoch 21/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m-298s[0m -2449298us/step - loss: 2.3605 - mean_absolute_error: 1.0728[1m 13/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.4169 - mean_absolute_error: 1.3958          [1m 25/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 10.0188 - mean_absolute_error: 1.4117[1m 38/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.7190 - mean_absolute_error: 1.4019 [1m 52/123[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.4519 - mean_absolute_error: 1.3925[1m 67/123[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.4985 - mean_absolute_error: 1.3875[1m 81/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.6623 - mean_absolute_error: 1.3878[1m 96/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 4ms/step - loss: 9.8314 - mean_absolute_error: 1.3887[1m111/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 9.9331 - mean_absolute_error: 1.3900
Epoch 21: val_loss improved from 5.59762 to 5.35817, saving model to population_growth_model_enhanced.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m-2s[0m 5ms/step - loss: 9.9602 - mean_absolute_error: 1.3895 - val_loss: 5.3582 - val_mean_absolute_error: 0.8924 - learning_rate: 0.0010
Epoch 22/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 28ms/step - loss: 3.6695 - mean_absolute_error: 1.1508[1m 16/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.6225 - mean_absolute_error: 1.3581 [1m 30/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.9480 - mean_absolute_error: 1.3719[1m 44/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.7533 - mean_absolute_error: 1.3619[1m 58/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.6904 - mean_absolute_error: 1.3526[1m 72/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.9057 - mean_absolute_error: 1.3535[1m 87/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.1516 - mean_absolute_error: 1.3574[1m101/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 8.3886 - mean_absolute_error: 1.3631[1m115/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 8.5418 - mean_absolute_error: 1.3673
Epoch 22: val_loss did not improve from 5.35817
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 8.5923 - mean_absolute_error: 1.3679 - val_loss: 6.2612 - val_mean_absolute_error: 0.8496 - learning_rate: 0.0010
Epoch 23/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 25ms/step - loss: 3.6573 - mean_absolute_error: 1.2511[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.2222 - mean_absolute_error: 1.3940 [1m 30/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.2224 - mean_absolute_error: 1.3939[1m 44/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.7563 - mean_absolute_error: 1.3771[1m 60/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.4786 - mean_absolute_error: 1.3648[1m 75/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.6214 - mean_absolute_error: 1.3629[1m 88/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.7720 - mean_absolute_error: 1.3631[1m101/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 8.9103 - mean_absolute_error: 1.3643[1m115/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 9.0071 - mean_absolute_error: 1.3659
Epoch 23: val_loss did not improve from 5.35817
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 9.0316 - mean_absolute_error: 1.3654 - val_loss: 5.5957 - val_mean_absolute_error: 0.8484 - learning_rate: 0.0010
Epoch 24/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 25ms/step - loss: 2.1596 - mean_absolute_error: 1.0171[1m 16/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.7915 - mean_absolute_error: 1.3199 [1m 30/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.2932 - mean_absolute_error: 1.3366[1m 45/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.5054 - mean_absolute_error: 1.3450[1m 60/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.7922 - mean_absolute_error: 1.3544[1m 74/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.2805 - mean_absolute_error: 1.3636[1m 87/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.6211 - mean_absolute_error: 1.3714[1m101/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 8.9424 - mean_absolute_error: 1.3800[1m115/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 9.1478 - mean_absolute_error: 1.3861
Epoch 24: val_loss improved from 5.35817 to 5.29411, saving model to population_growth_model_enhanced.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 9.2392 - mean_absolute_error: 1.3883 - val_loss: 5.2941 - val_mean_absolute_error: 0.8565 - learning_rate: 0.0010
Epoch 25/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 25ms/step - loss: 2.2393 - mean_absolute_error: 1.0572[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.0263 - mean_absolute_error: 1.3445 [1m 30/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.3175 - mean_absolute_error: 1.3497[1m 43/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.3130 - mean_absolute_error: 1.3468[1m 57/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.3715 - mean_absolute_error: 1.3437[1m 70/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.5937 - mean_absolute_error: 1.3471[1m 84/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.8070 - mean_absolute_error: 1.3510[1m 97/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 4ms/step - loss: 7.9730 - mean_absolute_error: 1.3545[1m109/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 4ms/step - loss: 8.0745 - mean_absolute_error: 1.3570[1m122/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 8.1289 - mean_absolute_error: 1.3576
Epoch 25: val_loss did not improve from 5.29411
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 8.1318 - mean_absolute_error: 1.3575 - val_loss: 5.4639 - val_mean_absolute_error: 0.8035 - learning_rate: 0.0010
Epoch 26/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 25ms/step - loss: 1.8300 - mean_absolute_error: 1.0060[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.2776 - mean_absolute_error: 1.2857 [1m 28/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.6830 - mean_absolute_error: 1.3068[1m 40/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.7519 - mean_absolute_error: 1.3087[1m 54/123[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.7838 - mean_absolute_error: 1.3068[1m 70/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.0282 - mean_absolute_error: 1.3101[1m 85/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.2621 - mean_absolute_error: 1.3140[1m 99/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 7.4587 - mean_absolute_error: 1.3176[1m113/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 7.6189 - mean_absolute_error: 1.3222
Epoch 26: val_loss did not improve from 5.29411
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 7.6993 - mean_absolute_error: 1.3244 - val_loss: 6.0893 - val_mean_absolute_error: 0.8749 - learning_rate: 0.0010
Epoch 27/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 28ms/step - loss: 3.0399 - mean_absolute_error: 1.1937[1m 14/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.4737 - mean_absolute_error: 1.3957 [1m 28/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.7615 - mean_absolute_error: 1.4002[1m 42/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.6568 - mean_absolute_error: 1.3856[1m 57/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.7017 - mean_absolute_error: 1.3759[1m 73/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.9073 - mean_absolute_error: 1.3723[1m 87/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.0327 - mean_absolute_error: 1.3703[1m101/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 8.1354 - mean_absolute_error: 1.3693[1m116/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 8.2105 - mean_absolute_error: 1.3689
Epoch 27: val_loss did not improve from 5.29411
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 8.2185 - mean_absolute_error: 1.3677 - val_loss: 5.9550 - val_mean_absolute_error: 0.8449 - learning_rate: 0.0010
Epoch 28/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 28ms/step - loss: 4.7707 - mean_absolute_error: 1.4025[1m 14/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.7692 - mean_absolute_error: 1.4269 [1m 27/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.9352 - mean_absolute_error: 1.4146[1m 39/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.5842 - mean_absolute_error: 1.3845[1m 52/123[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.2610 - mean_absolute_error: 1.3599[1m 65/123[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.2321 - mean_absolute_error: 1.3491[1m 77/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.3207 - mean_absolute_error: 1.3449[1m 89/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.3880 - mean_absolute_error: 1.3427[1m102/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 7.4801 - mean_absolute_error: 1.3421[1m116/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 7.5634 - mean_absolute_error: 1.3424
Epoch 28: val_loss improved from 5.29411 to 5.28353, saving model to population_growth_model_enhanced.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 6ms/step - loss: 7.5903 - mean_absolute_error: 1.3422 - val_loss: 5.2835 - val_mean_absolute_error: 0.8674 - learning_rate: 0.0010
Epoch 29/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 31ms/step - loss: 2.2413 - mean_absolute_error: 1.1070[1m 14/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.7961 - mean_absolute_error: 1.3452 [1m 28/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.3016 - mean_absolute_error: 1.3690[1m 44/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.3846 - mean_absolute_error: 1.3666[1m 59/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.4504 - mean_absolute_error: 1.3610[1m 73/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.6207 - mean_absolute_error: 1.3614[1m 89/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.8045 - mean_absolute_error: 1.3627[1m104/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 7.0031 - mean_absolute_error: 1.3661[1m119/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 7.1602 - mean_absolute_error: 1.3689
Epoch 29: val_loss did not improve from 5.28353
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 7.1977 - mean_absolute_error: 1.3693 - val_loss: 5.4513 - val_mean_absolute_error: 0.8190 - learning_rate: 0.0010
Epoch 30/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 25ms/step - loss: 8.7719 - mean_absolute_error: 1.3648[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.8915 - mean_absolute_error: 1.4009 [1m 30/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.6397 - mean_absolute_error: 1.3880[1m 45/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 7.2596 - mean_absolute_error: 1.3612[1m 61/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 7.1400 - mean_absolute_error: 1.3478[1m 76/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 7.2998 - mean_absolute_error: 1.3481[1m 92/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 3ms/step - loss: 7.4490 - mean_absolute_error: 1.3506[1m108/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 3ms/step - loss: 7.5741 - mean_absolute_error: 1.3540
Epoch 30: val_loss did not improve from 5.28353
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 7.6579 - mean_absolute_error: 1.3561 - val_loss: 5.3589 - val_mean_absolute_error: 0.8432 - learning_rate: 0.0010
Epoch 31/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 25ms/step - loss: 4.3227 - mean_absolute_error: 1.3458[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.3569 - mean_absolute_error: 1.3803 [1m 30/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.5579 - mean_absolute_error: 1.3679[1m 43/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.5944 - mean_absolute_error: 1.3598[1m 57/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.7207 - mean_absolute_error: 1.3555[1m 72/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.0217 - mean_absolute_error: 1.3562[1m 86/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.2088 - mean_absolute_error: 1.3568[1m 99/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 7.3422 - mean_absolute_error: 1.3579[1m112/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 7.4392 - mean_absolute_error: 1.3593
Epoch 31: val_loss did not improve from 5.28353
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 7.4851 - mean_absolute_error: 1.3591 - val_loss: 5.8972 - val_mean_absolute_error: 0.8446 - learning_rate: 0.0010
Epoch 32/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 28ms/step - loss: 4.4655 - mean_absolute_error: 1.2437[1m 12/123[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 5ms/step - loss: 6.1911 - mean_absolute_error: 1.3389 [1m 26/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.7731 - mean_absolute_error: 1.3711[1m 41/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.7769 - mean_absolute_error: 1.3712[1m 57/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.7727 - mean_absolute_error: 1.3657[1m 73/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.9789 - mean_absolute_error: 1.3677[1m 88/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.1758 - mean_absolute_error: 1.3728[1m102/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 7.3513 - mean_absolute_error: 1.3777[1m116/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 7.4723 - mean_absolute_error: 1.3818
Epoch 32: val_loss did not improve from 5.28353
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 7.5119 - mean_absolute_error: 1.3831 - val_loss: 5.7861 - val_mean_absolute_error: 0.8445 - learning_rate: 0.0010
Epoch 33/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 23ms/step - loss: 3.3314 - mean_absolute_error: 1.1829[1m 14/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.8764 - mean_absolute_error: 1.3788 [1m 27/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 9.0182 - mean_absolute_error: 1.3910[1m 42/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.6374 - mean_absolute_error: 1.3879[1m 56/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.3400 - mean_absolute_error: 1.3784[1m 70/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.2912 - mean_absolute_error: 1.3745[1m 85/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.3657 - mean_absolute_error: 1.3744[1m100/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 8.4107 - mean_absolute_error: 1.3745[1m115/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 8.4649 - mean_absolute_error: 1.3762
Epoch 33: val_loss did not improve from 5.28353
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 8.4692 - mean_absolute_error: 1.3759 - val_loss: 5.7790 - val_mean_absolute_error: 0.8299 - learning_rate: 0.0010
Epoch 34/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 27ms/step - loss: 5.4018 - mean_absolute_error: 1.4607[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.8047 - mean_absolute_error: 1.4705 [1m 29/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.9898 - mean_absolute_error: 1.4532[1m 44/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.7922 - mean_absolute_error: 1.4336[1m 60/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.7203 - mean_absolute_error: 1.4192[1m 75/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.9237 - mean_absolute_error: 1.4157[1m 90/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 8.0794 - mean_absolute_error: 1.4122[1m105/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 4ms/step - loss: 8.1862 - mean_absolute_error: 1.4097[1m120/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 8.2632 - mean_absolute_error: 1.4081
Epoch 34: val_loss did not improve from 5.28353
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 8.2733 - mean_absolute_error: 1.4075 - val_loss: 5.7088 - val_mean_absolute_error: 0.8584 - learning_rate: 0.0010
Epoch 35/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 25ms/step - loss: 3.6049 - mean_absolute_error: 1.2621[1m 14/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.0802 - mean_absolute_error: 1.3326 [1m 29/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.5843 - mean_absolute_error: 1.3451[1m 43/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.6759 - mean_absolute_error: 1.3408[1m 57/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.7569 - mean_absolute_error: 1.3382[1m 72/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.9849 - mean_absolute_error: 1.3417[1m 86/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.1638 - mean_absolute_error: 1.3462[1m102/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 7.3481 - mean_absolute_error: 1.3515[1m117/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 7.4719 - mean_absolute_error: 1.3556
Epoch 35: val_loss did not improve from 5.28353
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 7.5102 - mean_absolute_error: 1.3567 - val_loss: 5.5907 - val_mean_absolute_error: 0.8451 - learning_rate: 0.0010
Epoch 36/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 29ms/step - loss: 3.1492 - mean_absolute_error: 1.1427[1m 14/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.9940 - mean_absolute_error: 1.3062 [1m 28/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.4736 - mean_absolute_error: 1.3257[1m 41/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.6021 - mean_absolute_error: 1.3235[1m 55/123[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.6639 - mean_absolute_error: 1.3187[1m 68/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.8210 - mean_absolute_error: 1.3203[1m 80/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.9154 - mean_absolute_error: 1.3241[1m 93/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 4ms/step - loss: 7.0147 - mean_absolute_error: 1.3271[1m106/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 4ms/step - loss: 7.1007 - mean_absolute_error: 1.3311[1m119/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 7.1729 - mean_absolute_error: 1.3344
Epoch 36: val_loss did not improve from 5.28353

Epoch 36: ReduceLROnPlateau reducing learning rate to 0.0007000000332482159.
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 7.1878 - mean_absolute_error: 1.3352 - val_loss: 5.6239 - val_mean_absolute_error: 0.8321 - learning_rate: 0.0010
Epoch 37/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 25ms/step - loss: 2.8009 - mean_absolute_error: 1.1805[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.6334 - mean_absolute_error: 1.3462 [1m 29/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.7782 - mean_absolute_error: 1.3478[1m 43/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.6198 - mean_absolute_error: 1.3287[1m 57/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.5370 - mean_absolute_error: 1.3152[1m 73/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.6786 - mean_absolute_error: 1.3123[1m 89/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.8240 - mean_absolute_error: 1.3148[1m105/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 4ms/step - loss: 5.9641 - mean_absolute_error: 1.3188[1m120/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 6.0641 - mean_absolute_error: 1.3223
Epoch 37: val_loss did not improve from 5.28353
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 6.0816 - mean_absolute_error: 1.3227 - val_loss: 5.4969 - val_mean_absolute_error: 0.8228 - learning_rate: 7.0000e-04
Epoch 38/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 25ms/step - loss: 3.3882 - mean_absolute_error: 1.2614[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.1957 - mean_absolute_error: 1.3160 [1m 30/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.5649 - mean_absolute_error: 1.3333[1m 44/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.4370 - mean_absolute_error: 1.3252[1m 58/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.4096 - mean_absolute_error: 1.3202[1m 72/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.5306 - mean_absolute_error: 1.3210[1m 87/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.6554 - mean_absolute_error: 1.3244[1m102/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 6.7334 - mean_absolute_error: 1.3281[1m118/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 6.8037 - mean_absolute_error: 1.3317
Epoch 38: val_loss did not improve from 5.28353
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 6.8142 - mean_absolute_error: 1.3320 - val_loss: 5.6889 - val_mean_absolute_error: 0.8067 - learning_rate: 7.0000e-04
Epoch 39/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 26ms/step - loss: 2.5917 - mean_absolute_error: 1.1752[1m 16/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 5.5943 - mean_absolute_error: 1.3409 [1m 31/123[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 6.0855 - mean_absolute_error: 1.3487[1m 46/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 6.3943 - mean_absolute_error: 1.3571[1m 59/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.5427 - mean_absolute_error: 1.3609[1m 69/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.7231 - mean_absolute_error: 1.3641[1m 82/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.9845 - mean_absolute_error: 1.3690[1m 95/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 4ms/step - loss: 7.1580 - mean_absolute_error: 1.3721[1m108/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 4ms/step - loss: 7.2821 - mean_absolute_error: 1.3749[1m120/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 7.3530 - mean_absolute_error: 1.3761
Epoch 39: val_loss did not improve from 5.28353
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 7.3674 - mean_absolute_error: 1.3762 - val_loss: 5.3093 - val_mean_absolute_error: 0.7839 - learning_rate: 7.0000e-04
Epoch 40/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 26ms/step - loss: 2.9649 - mean_absolute_error: 1.1512[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.4199 - mean_absolute_error: 1.4088 [1m 29/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.6292 - mean_absolute_error: 1.4066[1m 43/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.5193 - mean_absolute_error: 1.3851[1m 57/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.4367 - mean_absolute_error: 1.3674[1m 72/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.5437 - mean_absolute_error: 1.3597[1m 88/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.7042 - mean_absolute_error: 1.3573[1m104/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 6.8115 - mean_absolute_error: 1.3574[1m119/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 6.8951 - mean_absolute_error: 1.3584
Epoch 40: val_loss did not improve from 5.28353
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 6.9133 - mean_absolute_error: 1.3584 - val_loss: 5.6814 - val_mean_absolute_error: 0.8019 - learning_rate: 7.0000e-04
Epoch 41/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 25ms/step - loss: 4.0059 - mean_absolute_error: 1.2135[1m 16/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 6.9457 - mean_absolute_error: 1.3962 [1m 31/123[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 6.9225 - mean_absolute_error: 1.3823[1m 46/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 6.7532 - mean_absolute_error: 1.3691[1m 61/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 6.7801 - mean_absolute_error: 1.3613[1m 76/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 6.9184 - mean_absolute_error: 1.3611[1m 92/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 3ms/step - loss: 7.0444 - mean_absolute_error: 1.3608[1m107/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 3ms/step - loss: 7.1552 - mean_absolute_error: 1.3622[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 3ms/step - loss: 7.2259 - mean_absolute_error: 1.3626
Epoch 41: val_loss improved from 5.28353 to 4.74025, saving model to population_growth_model_enhanced.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 7.2281 - mean_absolute_error: 1.3625 - val_loss: 4.7403 - val_mean_absolute_error: 0.8324 - learning_rate: 7.0000e-04
Epoch 42/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 26ms/step - loss: 4.4886 - mean_absolute_error: 1.2933[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.1376 - mean_absolute_error: 1.3305 [1m 30/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.5476 - mean_absolute_error: 1.3450[1m 45/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.5799 - mean_absolute_error: 1.3345[1m 61/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.6776 - mean_absolute_error: 1.3284[1m 75/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.8275 - mean_absolute_error: 1.3288[1m 90/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.9698 - mean_absolute_error: 1.3315[1m105/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 4ms/step - loss: 6.1130 - mean_absolute_error: 1.3351[1m119/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 6.2048 - mean_absolute_error: 1.3376
Epoch 42: val_loss did not improve from 4.74025
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 6.2229 - mean_absolute_error: 1.3379 - val_loss: 5.5873 - val_mean_absolute_error: 0.8024 - learning_rate: 7.0000e-04
Epoch 43/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 25ms/step - loss: 1.5841 - mean_absolute_error: 0.9072[1m 14/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.8766 - mean_absolute_error: 1.2734 [1m 27/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.2648 - mean_absolute_error: 1.3076[1m 41/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.2433 - mean_absolute_error: 1.3071[1m 57/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.2505 - mean_absolute_error: 1.3013[1m 71/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.4301 - mean_absolute_error: 1.3036[1m 85/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.5793 - mean_absolute_error: 1.3067[1m 99/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 5.7133 - mean_absolute_error: 1.3099[1m112/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 5.8258 - mean_absolute_error: 1.3137
Epoch 43: val_loss did not improve from 4.74025
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 5.8980 - mean_absolute_error: 1.3159 - val_loss: 5.7779 - val_mean_absolute_error: 0.8131 - learning_rate: 7.0000e-04
Epoch 44/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 27ms/step - loss: 2.5982 - mean_absolute_error: 1.1681[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.9846 - mean_absolute_error: 1.3014 [1m 31/123[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 6.1977 - mean_absolute_error: 1.3283[1m 46/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 6.0659 - mean_absolute_error: 1.3258[1m 62/123[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 6.1043 - mean_absolute_error: 1.3271[1m 77/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 6.2586 - mean_absolute_error: 1.3321[1m 92/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 3ms/step - loss: 6.3721 - mean_absolute_error: 1.3360[1m108/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 3ms/step - loss: 6.4792 - mean_absolute_error: 1.3399
Epoch 44: val_loss did not improve from 4.74025
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 4ms/step - loss: 6.5557 - mean_absolute_error: 1.3417 - val_loss: 4.9107 - val_mean_absolute_error: 0.8110 - learning_rate: 7.0000e-04
Epoch 45/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 27ms/step - loss: 2.7601 - mean_absolute_error: 1.1632[1m 16/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.7451 - mean_absolute_error: 1.3626 [1m 31/123[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.8814 - mean_absolute_error: 1.3584[1m 46/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.7916 - mean_absolute_error: 1.3445[1m 60/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.7996 - mean_absolute_error: 1.3360[1m 74/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.9143 - mean_absolute_error: 1.3345[1m 88/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.9993 - mean_absolute_error: 1.3348[1m101/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 6.0708 - mean_absolute_error: 1.3353[1m117/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 6.1505 - mean_absolute_error: 1.3366
Epoch 45: val_loss did not improve from 4.74025
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 6.1724 - mean_absolute_error: 1.3368 - val_loss: 5.2810 - val_mean_absolute_error: 0.7952 - learning_rate: 7.0000e-04
Epoch 46/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 26ms/step - loss: 4.1342 - mean_absolute_error: 1.2935[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.6155 - mean_absolute_error: 1.3659 [1m 30/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.5623 - mean_absolute_error: 1.3460[1m 44/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.4968 - mean_absolute_error: 1.3336[1m 58/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.5081 - mean_absolute_error: 1.3242[1m 74/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.7681 - mean_absolute_error: 1.3258[1m 89/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.0222 - mean_absolute_error: 1.3283[1m106/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 3ms/step - loss: 6.2137 - mean_absolute_error: 1.3320[1m122/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 3ms/step - loss: 6.3228 - mean_absolute_error: 1.3338
Epoch 46: val_loss did not improve from 4.74025
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 4ms/step - loss: 6.3311 - mean_absolute_error: 1.3339 - val_loss: 4.9951 - val_mean_absolute_error: 0.8002 - learning_rate: 7.0000e-04
Epoch 47/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 25ms/step - loss: 3.1186 - mean_absolute_error: 1.1652[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.7778 - mean_absolute_error: 1.3305 [1m 30/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.3012 - mean_absolute_error: 1.3475[1m 45/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 5.4953 - mean_absolute_error: 1.3417[1m 59/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.6209 - mean_absolute_error: 1.3329[1m 72/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.7651 - mean_absolute_error: 1.3299[1m 84/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.8591 - mean_absolute_error: 1.3292[1m 97/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 4ms/step - loss: 5.9629 - mean_absolute_error: 1.3303[1m111/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 6.0508 - mean_absolute_error: 1.3319
Epoch 47: val_loss did not improve from 4.74025
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 6.1013 - mean_absolute_error: 1.3319 - val_loss: 5.4264 - val_mean_absolute_error: 0.8105 - learning_rate: 7.0000e-04
Epoch 48/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 26ms/step - loss: 2.5291 - mean_absolute_error: 1.1504[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.6591 - mean_absolute_error: 1.4138 [1m 30/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.6867 - mean_absolute_error: 1.4032[1m 44/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.3453 - mean_absolute_error: 1.3820[1m 59/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.1462 - mean_absolute_error: 1.3640[1m 75/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.1032 - mean_absolute_error: 1.3579[1m 91/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 7.0489 - mean_absolute_error: 1.3550[1m107/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 4ms/step - loss: 7.0374 - mean_absolute_error: 1.3550[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 4ms/step - loss: 7.0194 - mean_absolute_error: 1.3540
Epoch 48: val_loss did not improve from 4.74025
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 7.0173 - mean_absolute_error: 1.3538 - val_loss: 5.1200 - val_mean_absolute_error: 0.7788 - learning_rate: 7.0000e-04
Epoch 49/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 27ms/step - loss: 5.1772 - mean_absolute_error: 1.2580[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.5737 - mean_absolute_error: 1.3333 [1m 29/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.9186 - mean_absolute_error: 1.3473[1m 43/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.0010 - mean_absolute_error: 1.3472[1m 56/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.0718 - mean_absolute_error: 1.3464[1m 70/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.2127 - mean_absolute_error: 1.3482[1m 85/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.2935 - mean_absolute_error: 1.3496[1m100/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 6.3641 - mean_absolute_error: 1.3504[1m115/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 6.4107 - mean_absolute_error: 1.3512
Epoch 49: val_loss did not improve from 4.74025

Epoch 49: ReduceLROnPlateau reducing learning rate to 0.0004900000232737511.
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 6.4137 - mean_absolute_error: 1.3504 - val_loss: 5.2362 - val_mean_absolute_error: 0.7843 - learning_rate: 7.0000e-04
Epoch 50/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 27ms/step - loss: 2.7471 - mean_absolute_error: 1.1506[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.8271 - mean_absolute_error: 1.3173 [1m 31/123[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.9902 - mean_absolute_error: 1.3112[1m 46/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.9803 - mean_absolute_error: 1.2981[1m 61/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.0738 - mean_absolute_error: 1.2933[1m 77/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 5.2456 - mean_absolute_error: 1.2953[1m 93/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 3ms/step - loss: 5.3807 - mean_absolute_error: 1.2984[1m108/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 3ms/step - loss: 5.5052 - mean_absolute_error: 1.3018[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 3ms/step - loss: 5.6331 - mean_absolute_error: 1.3039
Epoch 50: val_loss did not improve from 4.74025
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 5.6400 - mean_absolute_error: 1.3040 - val_loss: 5.7422 - val_mean_absolute_error: 0.7939 - learning_rate: 4.9000e-04
Epoch 51/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 28ms/step - loss: 4.0784 - mean_absolute_error: 1.4083[1m 13/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.0540 - mean_absolute_error: 1.3704 [1m 27/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.3974 - mean_absolute_error: 1.3646[1m 40/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.4267 - mean_absolute_error: 1.3484[1m 53/123[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.3998 - mean_absolute_error: 1.3363[1m 66/123[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.4612 - mean_absolute_error: 1.3305[1m 80/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.4990 - mean_absolute_error: 1.3281[1m 94/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 4ms/step - loss: 5.5302 - mean_absolute_error: 1.3275[1m109/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 4ms/step - loss: 5.5570 - mean_absolute_error: 1.3267
Epoch 51: val_loss did not improve from 4.74025
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 5.5715 - mean_absolute_error: 1.3252 - val_loss: 5.2060 - val_mean_absolute_error: 0.7997 - learning_rate: 4.9000e-04
Epoch 52/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 26ms/step - loss: 3.3641 - mean_absolute_error: 1.2361[1m 16/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 5.6759 - mean_absolute_error: 1.3785 [1m 32/123[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 6.0951 - mean_absolute_error: 1.3805[1m 46/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 6.0228 - mean_absolute_error: 1.3664[1m 60/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.0092 - mean_absolute_error: 1.3568[1m 76/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 6.0683 - mean_absolute_error: 1.3527[1m 92/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 3ms/step - loss: 6.1288 - mean_absolute_error: 1.3507[1m108/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 3ms/step - loss: 6.1993 - mean_absolute_error: 1.3507[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 3ms/step - loss: 6.2357 - mean_absolute_error: 1.3499
Epoch 52: val_loss did not improve from 4.74025
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 6.2370 - mean_absolute_error: 1.3498 - val_loss: 5.0582 - val_mean_absolute_error: 0.7909 - learning_rate: 4.9000e-04
Epoch 53/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 28ms/step - loss: 2.7469 - mean_absolute_error: 1.1357[1m 17/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 4.8470 - mean_absolute_error: 1.2712 [1m 33/123[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 5.3119 - mean_absolute_error: 1.3014[1m 48/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 5.3858 - mean_absolute_error: 1.3003[1m 63/123[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 5.5288 - mean_absolute_error: 1.2985[1m 78/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.6812 - mean_absolute_error: 1.3027[1m 94/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 3ms/step - loss: 5.7931 - mean_absolute_error: 1.3066[1m109/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 3ms/step - loss: 5.8747 - mean_absolute_error: 1.3096
Epoch 53: val_loss did not improve from 4.74025
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 4ms/step - loss: 5.9279 - mean_absolute_error: 1.3112 - val_loss: 5.4690 - val_mean_absolute_error: 0.7763 - learning_rate: 4.9000e-04
Epoch 54/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 25ms/step - loss: 3.9249 - mean_absolute_error: 1.3249[1m 16/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.8085 - mean_absolute_error: 1.3253 [1m 32/123[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.3788 - mean_absolute_error: 1.3355[1m 46/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.5719 - mean_absolute_error: 1.3305[1m 62/123[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.7429 - mean_absolute_error: 1.3302[1m 78/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 5.9234 - mean_absolute_error: 1.3348[1m 93/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 3ms/step - loss: 6.0307 - mean_absolute_error: 1.3380[1m105/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 4ms/step - loss: 6.0984 - mean_absolute_error: 1.3401[1m117/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 6.1587 - mean_absolute_error: 1.3419
Epoch 54: val_loss did not improve from 4.74025
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 6.1834 - mean_absolute_error: 1.3423 - val_loss: 5.4172 - val_mean_absolute_error: 0.7785 - learning_rate: 4.9000e-04
Epoch 55/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 24ms/step - loss: 4.0060 - mean_absolute_error: 1.2036[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.1591 - mean_absolute_error: 1.3969 [1m 30/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.4129 - mean_absolute_error: 1.4105[1m 43/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.3247 - mean_absolute_error: 1.3989[1m 56/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.2587 - mean_absolute_error: 1.3861[1m 70/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.2854 - mean_absolute_error: 1.3783[1m 84/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.3272 - mean_absolute_error: 1.3744[1m 97/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 4ms/step - loss: 6.3757 - mean_absolute_error: 1.3721[1m109/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 4ms/step - loss: 6.4119 - mean_absolute_error: 1.3711[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 4ms/step - loss: 6.4329 - mean_absolute_error: 1.3688
Epoch 55: val_loss did not improve from 4.74025
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 6.4331 - mean_absolute_error: 1.3686 - val_loss: 5.5560 - val_mean_absolute_error: 0.7695 - learning_rate: 4.9000e-04
Epoch 56/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 32ms/step - loss: 4.1390 - mean_absolute_error: 1.4452[1m 16/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 5.6080 - mean_absolute_error: 1.3870 [1m 32/123[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 3ms/step - loss: 5.5826 - mean_absolute_error: 1.3622[1m 47/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.4264 - mean_absolute_error: 1.3401[1m 62/123[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.5045 - mean_absolute_error: 1.3335[1m 77/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.6790 - mean_absolute_error: 1.3344[1m 92/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.8171 - mean_absolute_error: 1.3363[1m106/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 4ms/step - loss: 5.9344 - mean_absolute_error: 1.3395[1m121/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 6.0109 - mean_absolute_error: 1.3408
Epoch 56: val_loss did not improve from 4.74025
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 6.0202 - mean_absolute_error: 1.3409 - val_loss: 5.4526 - val_mean_absolute_error: 0.7811 - learning_rate: 4.9000e-04
Epoch 57/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 28ms/step - loss: 4.6932 - mean_absolute_error: 1.2346[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.4867 - mean_absolute_error: 1.3722 [1m 29/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.4754 - mean_absolute_error: 1.3564[1m 43/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.3020 - mean_absolute_error: 1.3338[1m 59/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.2656 - mean_absolute_error: 1.3215[1m 74/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.3582 - mean_absolute_error: 1.3215[1m 90/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.4360 - mean_absolute_error: 1.3233[1m105/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 4ms/step - loss: 5.5330 - mean_absolute_error: 1.3267[1m121/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 5.6285 - mean_absolute_error: 1.3295
Epoch 57: val_loss did not improve from 4.74025

Epoch 57: ReduceLROnPlateau reducing learning rate to 0.00034300000406801696.
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 5.6419 - mean_absolute_error: 1.3297 - val_loss: 5.5789 - val_mean_absolute_error: 0.7891 - learning_rate: 4.9000e-04
Epoch 58/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 24ms/step - loss: 2.3545 - mean_absolute_error: 1.0948[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.1497 - mean_absolute_error: 1.2956 [1m 27/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.5943 - mean_absolute_error: 1.3173[1m 39/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.7020 - mean_absolute_error: 1.3202[1m 52/123[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.7196 - mean_absolute_error: 1.3180[1m 67/123[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.8750 - mean_absolute_error: 1.3178[1m 82/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 6.0224 - mean_absolute_error: 1.3210[1m 96/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 4ms/step - loss: 6.1354 - mean_absolute_error: 1.3233[1m110/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 4ms/step - loss: 6.2089 - mean_absolute_error: 1.3252
Epoch 58: val_loss did not improve from 4.74025
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 6.2458 - mean_absolute_error: 1.3254 - val_loss: 5.5824 - val_mean_absolute_error: 0.7869 - learning_rate: 3.4300e-04
Epoch 59/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 29ms/step - loss: 2.3876 - mean_absolute_error: 1.1103[1m 14/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.6291 - mean_absolute_error: 1.2914 [1m 28/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.8291 - mean_absolute_error: 1.3019[1m 41/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.8772 - mean_absolute_error: 1.2991[1m 55/123[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.9585 - mean_absolute_error: 1.2974[1m 71/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.1111 - mean_absolute_error: 1.2986[1m 87/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.2289 - mean_absolute_error: 1.3008[1m103/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 5.3032 - mean_absolute_error: 1.3034[1m118/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 5.3547 - mean_absolute_error: 1.3054
Epoch 59: val_loss did not improve from 4.74025
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 5.3640 - mean_absolute_error: 1.3054 - val_loss: 5.4351 - val_mean_absolute_error: 0.7786 - learning_rate: 3.4300e-04
Epoch 60/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 29ms/step - loss: 4.0080 - mean_absolute_error: 1.3296[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.0484 - mean_absolute_error: 1.3521 [1m 28/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.2312 - mean_absolute_error: 1.3493[1m 40/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.2900 - mean_absolute_error: 1.3414[1m 55/123[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.3549 - mean_absolute_error: 1.3319[1m 70/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.4683 - mean_absolute_error: 1.3285[1m 86/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.5567 - mean_absolute_error: 1.3264[1m101/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 5.6018 - mean_absolute_error: 1.3250[1m115/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 5.6349 - mean_absolute_error: 1.3240
Epoch 60: val_loss did not improve from 4.74025
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 5.6490 - mean_absolute_error: 1.3228 - val_loss: 4.8344 - val_mean_absolute_error: 0.7786 - learning_rate: 3.4300e-04
Epoch 61/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 24ms/step - loss: 5.5290 - mean_absolute_error: 1.4290[1m 10/123[0m [32m━[0m[37m━━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 6ms/step - loss: 4.9332 - mean_absolute_error: 1.3875 [1m 24/123[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m0s[0m 5ms/step - loss: 5.3442 - mean_absolute_error: 1.3866[1m 39/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.2333 - mean_absolute_error: 1.3554[1m 53/123[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.3544 - mean_absolute_error: 1.3422[1m 68/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.4986 - mean_absolute_error: 1.3336[1m 83/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.6228 - mean_absolute_error: 1.3313[1m 97/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 4ms/step - loss: 5.7370 - mean_absolute_error: 1.3317[1m111/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 5.8340 - mean_absolute_error: 1.3331
Epoch 61: val_loss did not improve from 4.74025
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 5.8806 - mean_absolute_error: 1.3324 - val_loss: 5.1186 - val_mean_absolute_error: 0.7703 - learning_rate: 3.4300e-04
Epoch 62/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 26ms/step - loss: 4.0303 - mean_absolute_error: 1.1630[1m 14/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.4692 - mean_absolute_error: 1.3106 [1m 29/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.7224 - mean_absolute_error: 1.3179[1m 43/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.8032 - mean_absolute_error: 1.3170[1m 58/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.8750 - mean_absolute_error: 1.3118[1m 73/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.0284 - mean_absolute_error: 1.3129[1m 87/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.1133 - mean_absolute_error: 1.3123[1m101/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 5.1815 - mean_absolute_error: 1.3125[1m115/123[0m [32m━━━━━━━━━━━━━━━━━━[0m[37m━━[0m [1m0s[0m 4ms/step - loss: 5.2437 - mean_absolute_error: 1.3133
Epoch 62: val_loss did not improve from 4.74025
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 5.2719 - mean_absolute_error: 1.3131 - val_loss: 5.3334 - val_mean_absolute_error: 0.7733 - learning_rate: 3.4300e-04
Epoch 63/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 27ms/step - loss: 3.0300 - mean_absolute_error: 1.1217[1m 14/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.4671 - mean_absolute_error: 1.2413 [1m 27/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.8981 - mean_absolute_error: 1.2649[1m 40/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.0458 - mean_absolute_error: 1.2679[1m 53/123[0m [32m━━━━━━━━[0m[37m━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.1093 - mean_absolute_error: 1.2628[1m 67/123[0m [32m━━━━━━━━━━[0m[37m━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.2562 - mean_absolute_error: 1.2639[1m 80/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.3731 - mean_absolute_error: 1.2690[1m 94/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 4ms/step - loss: 5.4816 - mean_absolute_error: 1.2741[1m107/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 4ms/step - loss: 5.5785 - mean_absolute_error: 1.2791[1m120/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 5.6399 - mean_absolute_error: 1.2822
Epoch 63: val_loss did not improve from 4.74025
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 5.6513 - mean_absolute_error: 1.2828 - val_loss: 5.5150 - val_mean_absolute_error: 0.7639 - learning_rate: 3.4300e-04
Epoch 64/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m2s[0m 24ms/step - loss: 2.3469 - mean_absolute_error: 0.9836[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.3098 - mean_absolute_error: 1.2717 [1m 28/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.5744 - mean_absolute_error: 1.2916[1m 42/123[0m [32m━━━━━━[0m[37m━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.5732 - mean_absolute_error: 1.2888[1m 57/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.5821 - mean_absolute_error: 1.2812[1m 72/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.6974 - mean_absolute_error: 1.2792[1m 87/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.8109 - mean_absolute_error: 1.2807[1m102/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 4.9003 - mean_absolute_error: 1.2825[1m117/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 4.9599 - mean_absolute_error: 1.2831
Epoch 64: val_loss did not improve from 4.74025
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 4.9772 - mean_absolute_error: 1.2829 - val_loss: 5.3108 - val_mean_absolute_error: 0.7693 - learning_rate: 3.4300e-04
Epoch 65/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 27ms/step - loss: 2.0757 - mean_absolute_error: 0.9917[1m 13/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.6245 - mean_absolute_error: 1.2363 [1m 24/123[0m [32m━━━[0m[37m━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.9753 - mean_absolute_error: 1.2751[1m 35/123[0m [32m━━━━━[0m[37m━━━━━━━━━━━━━━━[0m [1m0s[0m 5ms/step - loss: 4.9736 - mean_absolute_error: 1.2802[1m 48/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.8723 - mean_absolute_error: 1.2753[1m 61/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.8943 - mean_absolute_error: 1.2730[1m 74/123[0m [32m━━━━━━━━━━━━[0m[37m━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.9980 - mean_absolute_error: 1.2751[1m 89/123[0m [32m━━━━━━━━━━━━━━[0m[37m━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.0918 - mean_absolute_error: 1.2775[1m103/123[0m [32m━━━━━━━━━━━━━━━━[0m[37m━━━━[0m [1m0s[0m 4ms/step - loss: 5.1884 - mean_absolute_error: 1.2808[1m118/123[0m [32m━━━━━━━━━━━━━━━━━━━[0m[37m━[0m [1m0s[0m 4ms/step - loss: 5.2642 - mean_absolute_error: 1.2837
Epoch 65: val_loss did not improve from 4.74025

Epoch 65: ReduceLROnPlateau reducing learning rate to 0.00024009999469853935.
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 5.2843 - mean_absolute_error: 1.2846 - val_loss: 5.5602 - val_mean_absolute_error: 0.7572 - learning_rate: 3.4300e-04
Epoch 66/150
[1m  1/123[0m [37m━━━━━━━━━━━━━━━━━━━━[0m [1m3s[0m 29ms/step - loss: 1.7139 - mean_absolute_error: 0.9242[1m 15/123[0m [32m━━[0m[37m━━━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.3235 - mean_absolute_error: 1.2218 [1m 30/123[0m [32m━━━━[0m[37m━━━━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.5414 - mean_absolute_error: 1.2521[1m 45/123[0m [32m━━━━━━━[0m[37m━━━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.5901 - mean_absolute_error: 1.2511[1m 59/123[0m [32m━━━━━━━━━[0m[37m━━━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.6904 - mean_absolute_error: 1.2506[1m 73/123[0m [32m━━━━━━━━━━━[0m[37m━━━━━━━━━[0m [1m0s[0m 4ms/step - loss: 4.8932 - mean_absolute_error: 1.2572[1m 86/123[0m [32m━━━━━━━━━━━━━[0m[37m━━━━━━━[0m [1m0s[0m 4ms/step - loss: 5.0494 - mean_absolute_error: 1.2630[1m 98/123[0m [32m━━━━━━━━━━━━━━━[0m[37m━━━━━[0m [1m0s[0m 4ms/step - loss: 5.1794 - mean_absolute_error: 1.2678[1m110/123[0m [32m━━━━━━━━━━━━━━━━━[0m[37m━━━[0m [1m0s[0m 4ms/step - loss: 5.2811 - mean_absolute_error: 1.2726[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m0s[0m 4ms/step - loss: 5.3912 - mean_absolute_error: 1.2766
Epoch 66: val_loss did not improve from 4.74025
[1m123/123[0m [32m━━━━━━━━━━━━━━━━━━━━[0m[37m[0m [1m1s[0m 5ms/step - loss: 5.3980 - mean_absolute_error: 1.2769 - val_loss: 4.7411 - val_mean_absolute_error: 0.7637 - learning_rate: 2.4010e-04
Epoch 66: early stopping
Restoring model weights from the end of the best epoch: 41.
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
Saved model to 'population_growth_model.h5'
Traceback (most recent call last):
  File "/home/kristian/my_project/TFproject/main.py", line 200, in <module>
    main()
  File "/home/kristian/my_project/TFproject/main.py", line 193, in main
    train_model_workflow(args)
  File "/home/kristian/my_project/TFproject/utils.py", line 18, in wrapper
    result = func(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kristian/my_project/TFproject/main.py", line 85, in train_model_workflow
    plot_training_history(history, output_file=f'training_history_{args.output_prefix}.png')
  File "/home/kristian/my_project/TFproject/evaluation.py", line 26, in plot_training_history
    plt.plot(history.history['mae'], label='Training MAE')
             ~~~~~~~~~~~~~~~^^^^^^^
KeyError: 'mae'
